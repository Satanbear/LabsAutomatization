<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="FoodstuffsTest" time="11.071" tests="3" errors="0" skipped="0" failures="2">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1251"/>
    <property name="java.class.path" value="C:\Users\Alexey\Desktop\Education\Master3\AutoTests\Lab2\target\test-classes;C:\Users\Alexey\Desktop\Education\Master3\AutoTests\Lab2\target\classes;C:\Users\Alexey\.m2\repository\org\postgresql\postgresql\42.2.5\postgresql-42.2.5.jar;C:\Users\Alexey\.m2\repository\org\liquibase\liquibase-core\3.0.7\liquibase-core-3.0.7.jar;C:\Users\Alexey\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\Alexey\.m2\repository\org\dbunit\dbunit\2.4.9\dbunit-2.4.9.jar;C:\Users\Alexey\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Alexey\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\Alexey\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\Alexey\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alexey\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Alexey\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.3.RELEASE\spring-boot-devtools-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot\2.1.3.RELEASE\spring-boot-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-context\5.1.5.RELEASE\spring-context-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.1.3.RELEASE\spring-boot-starter-data-jpa-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.3.RELEASE\spring-boot-starter-aop-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\aspectj\aspectjweaver\1.9.2\aspectjweaver-1.9.2.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.1.3.RELEASE\spring-boot-starter-jdbc-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-jdbc\5.1.5.RELEASE\spring-jdbc-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\Alexey\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alexey\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alexey\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Alexey\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alexey\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alexey\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Alexey\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Alexey\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alexey\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\Alexey\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alexey\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Alexey\.m2\repository\org\springframework\data\spring-data-jpa\2.1.5.RELEASE\spring-data-jpa-2.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\data\spring-data-commons\2.1.5.RELEASE\spring-data-commons-2.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-orm\5.1.5.RELEASE\spring-orm-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-tx\5.1.5.RELEASE\spring-tx-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-beans\5.1.5.RELEASE\spring-beans-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-aspects\5.1.5.RELEASE\spring-aspects-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.3.RELEASE\spring-boot-starter-web-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.3.RELEASE\spring-boot-starter-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.3.RELEASE\spring-boot-starter-logging-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\Alexey\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\Alexey\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.2\log4j-to-slf4j-2.11.2.jar;C:\Users\Alexey\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;C:\Users\Alexey\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\Alexey\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.3.RELEASE\spring-boot-starter-json-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.3.RELEASE\spring-boot-starter-tomcat-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.16\tomcat-embed-core-9.0.16.jar;C:\Users\Alexey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.16\tomcat-embed-el-9.0.16.jar;C:\Users\Alexey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.16\tomcat-embed-websocket-9.0.16.jar;C:\Users\Alexey\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.14.Final\hibernate-validator-6.0.14.Final.jar;C:\Users\Alexey\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-web\5.1.5.RELEASE\spring-web-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-webmvc\5.1.5.RELEASE\spring-webmvc-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-expression\5.1.5.RELEASE\spring-expression-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.3.RELEASE\spring-boot-starter-test-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-test\2.1.3.RELEASE\spring-boot-test-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.3.RELEASE\spring-boot-test-autoconfigure-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\Alexey\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\Alexey\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\Alexey\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\Alexey\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\Alexey\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\Alexey\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;C:\Users\Alexey\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\Alexey\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\Alexey\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\Alexey\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-core\5.1.5.RELEASE\spring-core-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-jcl\5.1.5.RELEASE\spring-jcl-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-test\5.1.5.RELEASE\spring-test-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.1.3.RELEASE\spring-boot-starter-security-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-aop\5.1.5.RELEASE\spring-aop-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\security\spring-security-config\5.1.4.RELEASE\spring-security-config-5.1.4.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\security\spring-security-core\5.1.4.RELEASE\spring-security-core-5.1.4.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\security\spring-security-web\5.1.4.RELEASE\spring-security-web-5.1.4.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\2.1.3.RELEASE\spring-boot-starter-actuator-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\2.1.3.RELEASE\spring-boot-actuator-autoconfigure-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-actuator\2.1.3.RELEASE\spring-boot-actuator-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\io\micrometer\micrometer-core\1.1.3\micrometer-core-1.1.3.jar;C:\Users\Alexey\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.9\HdrHistogram-2.1.9.jar;C:\Users\Alexey\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.3.RELEASE\spring-boot-autoconfigure-2.1.3.RELEASE.jar;"/>
    <property name="java.vm.vendor" value="JetBrains s.r.o"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://www.jetbrains.com/"/>
    <property name="user.timezone" value="Europe/Samara"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Windows 10"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RU"/>
    <property name="sun.boot.library.path" value="C:\Program Files (x86)\IntelliJ IDEA 2019.2.3\jbr\bin"/>
    <property name="sun.java.command" value="C:\Users\Alexey\AppData\Local\Temp\surefire17782633126360725401\surefirebooter13057914059430631355.jar C:\Users\Alexey\AppData\Local\Temp\surefire17782633126360725401 2021-01-10T22-11-39_746-jvmRun1 surefire13202678829863521804tmp surefire_06808686669154642038tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Alexey\Desktop\Education\Master3\AutoTests\Lab2\target\test-classes;C:\Users\Alexey\Desktop\Education\Master3\AutoTests\Lab2\target\classes;C:\Users\Alexey\.m2\repository\org\postgresql\postgresql\42.2.5\postgresql-42.2.5.jar;C:\Users\Alexey\.m2\repository\org\liquibase\liquibase-core\3.0.7\liquibase-core-3.0.7.jar;C:\Users\Alexey\.m2\repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;C:\Users\Alexey\.m2\repository\org\dbunit\dbunit\2.4.9\dbunit-2.4.9.jar;C:\Users\Alexey\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Alexey\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\Alexey\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\Alexey\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alexey\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Alexey\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-devtools\2.1.3.RELEASE\spring-boot-devtools-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot\2.1.3.RELEASE\spring-boot-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-context\5.1.5.RELEASE\spring-context-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.1.3.RELEASE\spring-boot-starter-data-jpa-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.1.3.RELEASE\spring-boot-starter-aop-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\aspectj\aspectjweaver\1.9.2\aspectjweaver-1.9.2.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.1.3.RELEASE\spring-boot-starter-jdbc-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-jdbc\5.1.5.RELEASE\spring-jdbc-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\javax\transaction\javax.transaction-api\1.3\javax.transaction-api-1.3.jar;C:\Users\Alexey\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alexey\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alexey\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Alexey\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alexey\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alexey\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Alexey\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Alexey\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alexey\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\classmate\1.4.0\classmate-1.4.0.jar;C:\Users\Alexey\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alexey\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Alexey\.m2\repository\org\springframework\data\spring-data-jpa\2.1.5.RELEASE\spring-data-jpa-2.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\data\spring-data-commons\2.1.5.RELEASE\spring-data-commons-2.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-orm\5.1.5.RELEASE\spring-orm-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-tx\5.1.5.RELEASE\spring-tx-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-beans\5.1.5.RELEASE\spring-beans-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-aspects\5.1.5.RELEASE\spring-aspects-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.1.3.RELEASE\spring-boot-starter-web-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter\2.1.3.RELEASE\spring-boot-starter-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.1.3.RELEASE\spring-boot-starter-logging-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\Alexey\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\Alexey\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.2\log4j-to-slf4j-2.11.2.jar;C:\Users\Alexey\.m2\repository\org\apache\logging\log4j\log4j-api\2.11.2\log4j-api-2.11.2.jar;C:\Users\Alexey\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\Alexey\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.1.3.RELEASE\spring-boot-starter-json-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.8\jackson-databind-2.9.8.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.8\jackson-core-2.9.8.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.8\jackson-datatype-jdk8-2.9.8.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.8\jackson-datatype-jsr310-2.9.8.jar;C:\Users\Alexey\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.8\jackson-module-parameter-names-2.9.8.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.1.3.RELEASE\spring-boot-starter-tomcat-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.16\tomcat-embed-core-9.0.16.jar;C:\Users\Alexey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.16\tomcat-embed-el-9.0.16.jar;C:\Users\Alexey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.16\tomcat-embed-websocket-9.0.16.jar;C:\Users\Alexey\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.14.Final\hibernate-validator-6.0.14.Final.jar;C:\Users\Alexey\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-web\5.1.5.RELEASE\spring-web-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-webmvc\5.1.5.RELEASE\spring-webmvc-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-expression\5.1.5.RELEASE\spring-expression-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.1.3.RELEASE\spring-boot-starter-test-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-test\2.1.3.RELEASE\spring-boot-test-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.3.RELEASE\spring-boot-test-autoconfigure-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\Alexey\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\Alexey\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\Alexey\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\Alexey\.m2\repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;C:\Users\Alexey\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\Alexey\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.10\byte-buddy-agent-1.9.10.jar;C:\Users\Alexey\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\Alexey\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\Alexey\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\Alexey\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-core\5.1.5.RELEASE\spring-core-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-jcl\5.1.5.RELEASE\spring-jcl-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-test\5.1.5.RELEASE\spring-test-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.1.3.RELEASE\spring-boot-starter-security-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\spring-aop\5.1.5.RELEASE\spring-aop-5.1.5.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\security\spring-security-config\5.1.4.RELEASE\spring-security-config-5.1.4.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\security\spring-security-core\5.1.4.RELEASE\spring-security-core-5.1.4.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\security\spring-security-web\5.1.4.RELEASE\spring-security-web-5.1.4.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\2.1.3.RELEASE\spring-boot-starter-actuator-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\2.1.3.RELEASE\spring-boot-actuator-autoconfigure-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-actuator\2.1.3.RELEASE\spring-boot-actuator-2.1.3.RELEASE.jar;C:\Users\Alexey\.m2\repository\io\micrometer\micrometer-core\1.1.3\micrometer-core-1.1.3.jar;C:\Users\Alexey\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.9\HdrHistogram-2.1.9.jar;C:\Users\Alexey\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\Alexey\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.1.3.RELEASE\spring-boot-autoconfigure-2.1.3.RELEASE.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Alexey"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2020-01-14"/>
    <property name="java.home" value="C:\Program Files (x86)\IntelliJ IDEA 2019.2.3\jbr"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Alexey\Desktop\Education\Master3\AutoTests\Lab2"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="idea.version2020.1.1" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\Alexey\AppData\Local\Temp\surefire17782633126360725401\surefirebooter13057914059430631355.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="11.0.6+8-b765.40"/>
    <property name="user.name" value="Alexey"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1251"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Alexey\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://youtrack.jetbrains.com"/>
    <property name="java.io.tmpdir" value="C:\Users\Alexey\AppData\Local\Temp\"/>
    <property name="java.version" value="11.0.6"/>
    <property name="user.dir" value="C:\Users\Alexey\Desktop\Education\Master3\AutoTests\Lab2"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files (x86)\IntelliJ IDEA 2019.2.3\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Common Files\Siemens\Automation\Simatic OAM\bin;C:\Program Files (x86)\JDK\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Games\WinCC\bin\;C:\Program Files (x86)\Brackets\command;C:\Program Files (x86)\Git\cmd;C:\Siemens\Automation\WinCC_OA\3.15\bin\;C:\Program Files\nodejs\;C:\Users\Alexey\AppData\Local\Microsoft\WindowsApps;C:\Users\Alexey\AppData\Roaming\npm;."/>
    <property name="java.vendor" value="JetBrains s.r.o"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vm.version" value="11.0.6+8-b765.40"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="55.0"/>
  </properties>
  <testcase name="testGetExpiredProducts" classname="FoodstuffsTest" time="4.093">
    <failure message="expected:&lt;9&gt; but was:&lt;13&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<9> but was:<13>
	at FoodstuffsTest.testGetExpiredProducts(FoodstuffsTest.java:72)
]]></failure>
    <system-out><![CDATA[22:11:40.591 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=driverClass, property=org.postgresql.Driver) - start
22:11:40.634 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
22:11:40.634 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
22:11:40.644 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
22:11:40.644 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
22:11:40.690 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@7494f96a, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@561b6512) - start
22:11:40.691 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@7494f96a, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@561b6512) - start
22:11:40.696 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.696 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
22:11:40.696 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.696 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.696 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.697 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.697 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.697 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.715 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)]) - start
22:11:40.716 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:40.716 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.716 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.716 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:40.716 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:40.716 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:40.717 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.717 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.717 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.718 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.718 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
22:11:40.718 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.719 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.719 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.720 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.720 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.721 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.721 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.721 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.722 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
22:11:40.722 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.723 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.723 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.724 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=5) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=5) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.724 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.725 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.725 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.725 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=6) - start
22:11:40.725 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=6) - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.726 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.726 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.727 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=7) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=7) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.727 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.727 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.728 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.728 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.728 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.728 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.729 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=8) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=8) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.729 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.733 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.733 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.733 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.733 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.734 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=9) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=9) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.734 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.735 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.735 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=10) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=10) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.735 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.735 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.736 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.736 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=11) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=11) - start
22:11:40.736 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.737 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.737 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.738 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=12) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=12) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.738 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.738 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.739 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=13) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=13) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.739 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.739 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.740 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=14) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=14) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.740 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.741 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.741 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=15) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=15) - start
22:11:40.741 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.742 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.742 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=16) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=16) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.743 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.743 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.744 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=17) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=17) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.744 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.745 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=18) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=18) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.745 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.746 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=19) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=19) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.746 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=20) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=20) - start
22:11:40.746 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.747 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.747 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)]) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:40.747 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:40.747 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.748 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.748 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Мясо) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Мясо) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.748 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Масло) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Масло) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Рис) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Рис) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.749 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.750 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.750 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Макароны) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Макароны) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.750 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.750 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сок) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сок) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.750 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Помидоры) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Помидоры) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Огурцы) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Огурцы) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.751 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Яблоки) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Яблоки) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Лук) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Лук) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:40.752 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.753 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.753 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Пельмени) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Пельмени) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.753 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.753 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.754 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown)]) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:40.754 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.754 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.754 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Хлеб) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Хлеб) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.754 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.755 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.755 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сыр) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сыр) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.755 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.755 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Йогурт) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Йогурт) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.755 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сосиски) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сосиски) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.756 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.756 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.757 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Рыба) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Рыба) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.757 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.757 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Яйца) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Яйца) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.757 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.758 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.758 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Перец) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Перец) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.758 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.766 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.766 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.766 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.766 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.766 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.767 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.767 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.767 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.767 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.767 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.767 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Бананы) - start
22:11:40.767 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Бананы) - start
22:11:40.767 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@5c90e579) - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.768 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.769 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.769 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Молоко) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Молоко) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.769 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:40.769 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
22:11:40.769 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[foodstuffs, productdetails, expiredproducts], _tableMap={PRODUCTDETAILS=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], FOODSTUFFS=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], EXPIREDPRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]}, _caseSensitiveTableNames=false]
22:11:40.769 [main] DEBUG org.dbunit.AbstractDatabaseTester - setDataSet(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:40.770 [main] DEBUG org.dbunit.AbstractDatabaseTester - onSetup() - start
22:11:40.770 [main] DEBUG org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.CompositeOperation[_actions=[org.dbunit.operation.DeleteAllOperation@1356d4d4, org.dbunit.operation.InsertOperation[_reverseRowOrder=false, super=org.dbunit.operation.InsertOperation@c03cf28]]]) - start
22:11:40.770 [main] DEBUG org.dbunit.AbstractDatabaseTester - OperationListener is null and will be defaulted.
22:11:40.771 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
22:11:40.771 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:postgresql://localhost:5432/TestLab2Expected) - start
22:11:40.937 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=public (dbIdentifierQuoteString=")
22:11:40.940 [main] DEBUG org.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:40.940 [main] DEBUG org.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
22:11:40.955 [main] DEBUG org.dbunit.DefaultOperationListener - connectionCreated(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=null]) - start
22:11:40.955 [main] DEBUG org.dbunit.AbstractDatabaseTester - getDataSet() - start
22:11:40.955 [main] DEBUG org.dbunit.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:40.955 [main] DEBUG org.dbunit.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:40.955 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:40.957 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:40.957 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.959 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.959 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.959 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:40.959 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:40.960 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:40.960 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:40.960 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:40.960 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=expiredproducts) - start
22:11:40.960 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:40.960 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
22:11:40.965 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:40.965 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.postgresql.jdbc.PgResultSet@3e08ff24
22:11:40.966 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}]) - start
22:11:40.966 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:40.966 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=expiredproducts, escapePattern=null) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=null) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:40.967 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}]) - start
22:11:40.967 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:40.967 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=foodstuffs, escapePattern=null) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=null) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:40.967 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}]) - start
22:11:40.967 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:40.967 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=productdetails, escapePattern=null) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=null) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.968 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=expiredproducts (dbIdentifierQuoteString=")
22:11:40.968 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'expiredproducts' exists in schema 'public' ...
22:11:40.971 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@59402b8f) - start
22:11:40.972 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=expiredproducts, object=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]) - start
22:11:40.986 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.986 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.986 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:40.986 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:40.986 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=expiredproducts, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:40.986 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:40.986 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=expiredproducts, escapePattern=null) - start
22:11:40.986 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.expiredproducts) - start
22:11:40.986 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.expiredproducts
22:11:40.986 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=productdetails) - start
22:11:40.986 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:40.986 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.986 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.987 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.987 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.987 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=productdetails (dbIdentifierQuoteString=")
22:11:40.987 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'productdetails' exists in schema 'public' ...
22:11:40.988 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@247310d0) - start
22:11:40.989 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=productdetails, object=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]) - start
22:11:40.997 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.997 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.997 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:40.997 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:40.998 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=productdetails, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:40.998 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:40.998 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=productdetails, escapePattern=null) - start
22:11:40.998 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.productdetails) - start
22:11:40.998 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.productdetails
22:11:40.998 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=foodstuffs) - start
22:11:40.998 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:40.998 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.998 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.998 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:40.998 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:40.998 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=foodstuffs (dbIdentifierQuoteString=")
22:11:40.998 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'foodstuffs' exists in schema 'public' ...
22:11:41.000 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@1033576a) - start
22:11:41.000 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=foodstuffs, object=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]) - start
22:11:41.007 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.007 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.007 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.007 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.007 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=foodstuffs, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.007 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.007 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=foodstuffs, escapePattern=null) - start
22:11:41.007 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.foodstuffs) - start
22:11:41.007 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.foodstuffs
22:11:41.007 [main] DEBUG org.dbunit.database.statement.SimpleStatement - executeBatch() - start
22:11:41.008 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.expiredproducts
22:11:41.008 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.productdetails
22:11:41.009 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.foodstuffs
22:11:41.009 [main] DEBUG org.dbunit.database.statement.SimpleStatement - clearBatch() - start
22:11:41.009 [main] DEBUG org.dbunit.database.statement.AbstractBatchStatement - close() - start
22:11:41.009 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.009 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.010 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.010 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.010 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.010 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=foodstuffs) - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.010 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.011 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.011 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=0) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchasePrice) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=markup) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=shelfLife) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.011 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.011 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=foodstuffs, columns=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], keys=[], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.011 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=foodstuffs, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=foodstuffs, escapePattern=null) - start
22:11:41.011 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
22:11:41.011 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=name, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.011 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=purchaseprice, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.011 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=purchaseprice, escapePattern=null) - start
22:11:41.011 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=amount, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.012 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.012 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=amount, escapePattern=null) - start
22:11:41.012 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=markup, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.012 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.012 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=markup, escapePattern=null) - start
22:11:41.012 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=shelflife, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.012 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.012 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=shelflife, escapePattern=null) - start
22:11:41.012 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.013 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.018 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:41.018 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.018 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.018 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.018 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.018 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.018 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.018 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (?, ?, ?, ?, ?, ?)) - start
22:11:41.018 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.018 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.019 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Хлеб, dataType=VARCHAR) - start
22:11:41.019 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Хлеб, dataType=VARCHAR) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Хлеб, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, ?, ?, ?, ?, ?)) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Хлеб) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Хлеб) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.019 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.020 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3300, dataType=INTEGER) - start
22:11:41.020 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3300, dataType=INTEGER) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3300, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', ?, ?, ?, ?)) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.020 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=100, dataType=INTEGER) - start
22:11:41.020 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=100, dataType=INTEGER) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=100, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', 3300, ?, ?, ?)) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=markup) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.020 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.020 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', 3300, 100, ?, ?)) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=shelflife) - start
22:11:41.020 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.021 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.021 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.021 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.021 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-08-20, dataType=DATE) - start
22:11:41.021 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-08-20, dataType=DATE) - start
22:11:41.021 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-08-20, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', 3300, 100, 3, ?)) - start
22:11:41.021 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-20) - start
22:11:41.021 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.021 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.024 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=1) - start
22:11:41.024 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
22:11:41.024 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.024 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.024 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.024 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.024 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.024 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.024 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchasePrice) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=markup) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=shelfLife) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.025 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.025 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', 3300, 100, 3, '2020-08-20 +04')) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.025 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.026 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Мясо, dataType=VARCHAR) - start
22:11:41.026 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Мясо, dataType=VARCHAR) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Мясо, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Хлеб', 3300, 100, 3, '2020-08-20 +04')) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Мясо) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Мясо) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.026 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=6000, dataType=INTEGER) - start
22:11:41.026 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=6000, dataType=INTEGER) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=6000, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 3300, 100, 3, '2020-08-20 +04')) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.026 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.026 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.026 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=20, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 6000, 100, 3, '2020-08-20 +04')) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=markup) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.027 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.027 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=10, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 6000, 20, 3, '2020-08-20 +04')) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=shelflife) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.027 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-02, dataType=DATE) - start
22:11:41.027 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-02, dataType=DATE) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-02, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 6000, 20, 10, '2020-08-20 +04')) - start
22:11:41.027 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:41.027 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.027 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.028 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=2) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchasePrice) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.028 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=markup) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=shelfLife) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.029 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.029 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 6000, 20, 10, '2020-12-02 +04')) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.029 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сыр, dataType=VARCHAR) - start
22:11:41.029 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сыр, dataType=VARCHAR) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сыр, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Мясо', 6000, 20, 10, '2020-12-02 +04')) - start
22:11:41.029 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сыр) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сыр) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.030 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=4500, dataType=INTEGER) - start
22:11:41.030 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=4500, dataType=INTEGER) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=4500, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 6000, 20, 10, '2020-12-02 +04')) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.030 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=30, dataType=INTEGER) - start
22:11:41.030 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=30, dataType=INTEGER) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=30, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 4500, 20, 10, '2020-12-02 +04')) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=markup) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.030 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.030 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=15, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 4500, 30, 10, '2020-12-02 +04')) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=shelflife) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.030 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.031 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.031 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.031 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-11-02, dataType=DATE) - start
22:11:41.031 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-11-02, dataType=DATE) - start
22:11:41.031 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-11-02, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 4500, 30, 15, '2020-12-02 +04')) - start
22:11:41.031 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-02) - start
22:11:41.031 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.031 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.032 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=3) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchasePrice) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=markup) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=shelfLife) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.032 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
22:11:41.032 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 4500, 30, 15, '2020-11-02 +04')) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.032 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.033 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Йогурт, dataType=VARCHAR) - start
22:11:41.033 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Йогурт, dataType=VARCHAR) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Йогурт, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Сыр', 4500, 30, 15, '2020-11-02 +04')) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Йогурт) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Йогурт) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.033 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1500, dataType=INTEGER) - start
22:11:41.033 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1500, dataType=INTEGER) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1500, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 4500, 30, 15, '2020-11-02 +04')) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.033 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=50, dataType=INTEGER) - start
22:11:41.033 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=50, dataType=INTEGER) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=50, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 1500, 30, 15, '2020-11-02 +04')) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:41.033 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=markup) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.034 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.034 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 1500, 50, 15, '2020-11-02 +04')) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=shelflife) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.034 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-07-15, dataType=DATE) - start
22:11:41.034 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-07-15, dataType=DATE) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-07-15, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 1500, 50, 2, '2020-11-02 +04')) - start
22:11:41.034 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-07-15) - start
22:11:41.034 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.034 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.035 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=4) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchasePrice) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=amount) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=markup) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=shelfLife) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.035 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.035 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.035 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 1500, 50, 2, '2020-07-15 +04')) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.036 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Масло, dataType=VARCHAR) - start
22:11:41.036 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Масло, dataType=VARCHAR) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Масло, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Йогурт', 1500, 50, 2, '2020-07-15 +04')) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Масло) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Масло) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.036 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9600, dataType=INTEGER) - start
22:11:41.036 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9600, dataType=INTEGER) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9600, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 1500, 50, 2, '2020-07-15 +04')) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=amount) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.036 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=120, dataType=INTEGER) - start
22:11:41.036 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=120, dataType=INTEGER) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=120, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 9600, 50, 2, '2020-07-15 +04')) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=markup) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.036 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.036 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 9600, 120, 2, '2020-07-15 +04')) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.036 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.037 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=shelflife) - start
22:11:41.037 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.037 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.037 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.037 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.037 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-19, dataType=DATE) - start
22:11:41.037 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-19, dataType=DATE) - start
22:11:41.037 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-19, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 9600, 120, 5, '2020-07-15 +04')) - start
22:11:41.037 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:41.037 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.037 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.038 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=5) - start
22:11:41.038 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchasePrice) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=amount) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=markup) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=shelfLife) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.039 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=6, dataType=INTEGER) - start
22:11:41.039 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=6, dataType=INTEGER) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=6, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 9600, 120, 5, '2020-12-19 +04'::date)) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.039 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Рис, dataType=VARCHAR) - start
22:11:41.039 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Рис, dataType=VARCHAR) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Рис, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Масло', 9600, 120, 5, '2020-12-19 +04'::date)) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Рис) - start
22:11:41.039 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Рис) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.040 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3850, dataType=INTEGER) - start
22:11:41.040 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3850, dataType=INTEGER) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3850, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 9600, 120, 5, '2020-12-19 +04'::date)) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=amount) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.040 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=70, dataType=INTEGER) - start
22:11:41.040 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=70, dataType=INTEGER) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=70, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 3850, 120, 5, '2020-12-19 +04'::date)) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=markup) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.040 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.040 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 3850, 70, 5, '2020-12-19 +04'::date)) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=shelflife) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.040 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-04, dataType=DATE) - start
22:11:41.040 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-04, dataType=DATE) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-04, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 3850, 70, 7, '2020-12-19 +04'::date)) - start
22:11:41.040 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-04) - start
22:11:41.041 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.041 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.042 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=6) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=id) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchasePrice) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=amount) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=markup) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=shelfLife) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=id) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.043 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.043 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.043 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 3850, 70, 7, '2020-12-04 +04')) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.044 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Гречка, dataType=VARCHAR) - start
22:11:41.044 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Гречка, dataType=VARCHAR) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Гречка, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Рис', 3850, 70, 7, '2020-12-04 +04')) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Гречка) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Гречка) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.044 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2100, dataType=INTEGER) - start
22:11:41.044 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2100, dataType=INTEGER) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2100, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 3850, 70, 7, '2020-12-04 +04')) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=amount) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.044 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.044 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=35, dataType=INTEGER) - start
22:11:41.044 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=35, dataType=INTEGER) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=35, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 2100, 70, 7, '2020-12-04 +04')) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=markup) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.045 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.045 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 2100, 35, 7, '2020-12-04 +04')) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=shelflife) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.045 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-11-10, dataType=DATE) - start
22:11:41.045 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-11-10, dataType=DATE) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-11-10, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 2100, 35, 7, '2020-12-04 +04')) - start
22:11:41.045 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-10) - start
22:11:41.046 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.046 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.047 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=7) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=id) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchasePrice) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=amount) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=markup) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=shelfLife) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=id) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.048 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=8, dataType=INTEGER) - start
22:11:41.048 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=8, dataType=INTEGER) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=8, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 2100, 35, 7, '2020-11-10 +04')) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.048 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Макароны, dataType=VARCHAR) - start
22:11:41.048 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Макароны, dataType=VARCHAR) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Макароны, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Гречка', 2100, 35, 7, '2020-11-10 +04')) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Макароны) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Макароны) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.048 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9000, dataType=INTEGER) - start
22:11:41.048 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9000, dataType=INTEGER) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9000, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 2100, 35, 7, '2020-11-10 +04')) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=amount) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.048 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=200, dataType=INTEGER) - start
22:11:41.048 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=200, dataType=INTEGER) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=200, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 9000, 35, 7, '2020-11-10 +04')) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.048 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=markup) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.049 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.049 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 9000, 200, 7, '2020-11-10 +04')) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=shelflife) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.049 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-25, dataType=DATE) - start
22:11:41.049 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-25, dataType=DATE) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-25, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 9000, 200, 2, '2020-11-10 +04')) - start
22:11:41.049 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-25) - start
22:11:41.049 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.049 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.050 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=id) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchasePrice) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=amount) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=markup) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=shelfLife) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=id) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.050 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9, dataType=INTEGER) - start
22:11:41.050 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9, dataType=INTEGER) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 9000, 200, 2, '2020-12-25 +04')) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.050 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сосиски, dataType=VARCHAR) - start
22:11:41.050 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сосиски, dataType=VARCHAR) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сосиски, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Макароны', 9000, 200, 2, '2020-12-25 +04')) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сосиски) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сосиски) - start
22:11:41.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1800, dataType=INTEGER) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1800, dataType=INTEGER) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1800, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 9000, 200, 2, '2020-12-25 +04')) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=amount) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=10, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 1800, 200, 2, '2020-12-25 +04')) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=markup) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9, dataType=INTEGER) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9, dataType=INTEGER) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 1800, 10, 2, '2020-12-25 +04')) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=shelflife) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-10-21, dataType=DATE) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-10-21, dataType=DATE) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-10-21, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 1800, 10, 9, '2020-12-25 +04')) - start
22:11:41.051 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-21) - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.051 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.052 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=9) - start
22:11:41.052 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=id) - start
22:11:41.052 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.052 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.052 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.052 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchasePrice) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=amount) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=markup) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=shelfLife) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=id) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.053 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.053 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=10, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 1800, 10, 9, '2020-10-21 +04')) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.053 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Рыба, dataType=VARCHAR) - start
22:11:41.053 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Рыба, dataType=VARCHAR) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Рыба, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Сосиски', 1800, 10, 9, '2020-10-21 +04')) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Рыба) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Рыба) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.053 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2800, dataType=INTEGER) - start
22:11:41.053 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2800, dataType=INTEGER) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2800, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 1800, 10, 9, '2020-10-21 +04')) - start
22:11:41.053 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=amount) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.054 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.054 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 2800, 10, 9, '2020-10-21 +04')) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=markup) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.054 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.054 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=15, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 2800, 5, 9, '2020-10-21 +04')) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=shelflife) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.054 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-08-16, dataType=DATE) - start
22:11:41.054 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-08-16, dataType=DATE) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-08-16, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 2800, 5, 15, '2020-10-21 +04')) - start
22:11:41.054 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-16) - start
22:11:41.054 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.054 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.055 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=id) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=purchasePrice) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=amount) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=markup) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=shelfLife) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=id) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.055 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=11, dataType=INTEGER) - start
22:11:41.055 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=11, dataType=INTEGER) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=11, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 2800, 5, 15, '2020-08-16 +04')) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.055 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сок, dataType=VARCHAR) - start
22:11:41.055 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сок, dataType=VARCHAR) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сок, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Рыба', 2800, 5, 15, '2020-08-16 +04')) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сок) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сок) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=purchaseprice) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.055 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1005, dataType=INTEGER) - start
22:11:41.055 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1005, dataType=INTEGER) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1005, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 2800, 5, 15, '2020-08-16 +04')) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=amount) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.055 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.055 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.055 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=15, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 1005, 5, 15, '2020-08-16 +04')) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=markup) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.056 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.056 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 1005, 15, 15, '2020-08-16 +04')) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=shelflife) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.056 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-29, dataType=DATE) - start
22:11:41.056 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-29, dataType=DATE) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-29, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 1005, 15, 7, '2020-08-16 +04')) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-29) - start
22:11:41.056 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.056 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.056 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=11) - start
22:11:41.056 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=id) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=name) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=purchasePrice) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=amount) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=markup) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=shelfLife) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=id) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.057 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=12, dataType=INTEGER) - start
22:11:41.057 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=12, dataType=INTEGER) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=12, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 1005, 15, 7, '2020-12-29 +04')) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=name) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.057 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Яйца, dataType=VARCHAR) - start
22:11:41.057 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Яйца, dataType=VARCHAR) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Яйца, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Сок', 1005, 15, 7, '2020-12-29 +04')) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Яйца) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Яйца) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=purchaseprice) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.057 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5929, dataType=INTEGER) - start
22:11:41.057 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5929, dataType=INTEGER) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5929, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 1005, 15, 7, '2020-12-29 +04')) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=amount) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.057 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=77, dataType=INTEGER) - start
22:11:41.057 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=77, dataType=INTEGER) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=77, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 5929, 15, 7, '2020-12-29 +04')) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=markup) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.057 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.058 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.058 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 5929, 77, 7, '2020-12-29 +04')) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=shelflife) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.058 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-09-01, dataType=DATE) - start
22:11:41.058 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-09-01, dataType=DATE) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-09-01, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 5929, 77, 1, '2020-12-29 +04')) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-09-01) - start
22:11:41.058 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.058 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.058 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=12) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=id) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=name) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=purchasePrice) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=amount) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=markup) - start
22:11:41.058 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=shelfLife) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=id) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.059 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=13, dataType=INTEGER) - start
22:11:41.059 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=13, dataType=INTEGER) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=13, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 5929, 77, 1, '2020-09-01 +04')) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=name) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.059 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Помидоры, dataType=VARCHAR) - start
22:11:41.059 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Помидоры, dataType=VARCHAR) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Помидоры, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Яйца', 5929, 77, 1, '2020-09-01 +04')) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Помидоры) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Помидоры) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=purchaseprice) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.059 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=24500, dataType=INTEGER) - start
22:11:41.059 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=24500, dataType=INTEGER) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=24500, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 5929, 77, 1, '2020-09-01 +04')) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=amount) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.059 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.060 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=500, dataType=INTEGER) - start
22:11:41.060 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=500, dataType=INTEGER) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=500, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 24500, 77, 1, '2020-09-01 +04')) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=markup) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.060 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.060 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 24500, 500, 1, '2020-09-01 +04')) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=shelflife) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.060 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-11, dataType=DATE) - start
22:11:41.060 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-11, dataType=DATE) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-11, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 24500, 500, 2, '2020-09-01 +04')) - start
22:11:41.060 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-11) - start
22:11:41.060 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.060 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.061 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=13) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=id) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=name) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=purchasePrice) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=amount) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=markup) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=shelfLife) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=id) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.061 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=14, dataType=INTEGER) - start
22:11:41.061 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=14, dataType=INTEGER) - start
22:11:41.061 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=14, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 24500, 500, 2, '2020-12-11 +04')) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=name) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.062 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Огурцы, dataType=VARCHAR) - start
22:11:41.062 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Огурцы, dataType=VARCHAR) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Огурцы, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Помидоры', 24500, 500, 2, '2020-12-11 +04')) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Огурцы) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Огурцы) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=purchaseprice) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.062 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=46900, dataType=INTEGER) - start
22:11:41.062 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=46900, dataType=INTEGER) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=46900, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 24500, 500, 2, '2020-12-11 +04')) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=amount) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.062 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=700, dataType=INTEGER) - start
22:11:41.062 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=700, dataType=INTEGER) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=700, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 46900, 500, 2, '2020-12-11 +04')) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=markup) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.062 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.062 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 46900, 700, 2, '2020-12-11 +04')) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=shelflife) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.063 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-11-22, dataType=DATE) - start
22:11:41.063 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-11-22, dataType=DATE) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-11-22, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 46900, 700, 1, '2020-12-11 +04')) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-22) - start
22:11:41.063 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.063 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.063 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=14) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=id) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=name) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=purchasePrice) - start
22:11:41.063 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=amount) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=markup) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=shelfLife) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=id) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=15, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 46900, 700, 1, '2020-11-22 +04')) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=name) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Перец, dataType=VARCHAR) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Перец, dataType=VARCHAR) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Перец, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Огурцы', 46900, 700, 1, '2020-11-22 +04')) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Перец) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Перец) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=purchaseprice) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3400, dataType=INTEGER) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3400, dataType=INTEGER) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3400, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 46900, 700, 1, '2020-11-22 +04')) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=amount) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=100, dataType=INTEGER) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=100, dataType=INTEGER) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=100, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 3400, 700, 1, '2020-11-22 +04')) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=markup) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.064 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.064 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 3400, 100, 1, '2020-11-22 +04')) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=shelflife) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.065 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-10-16, dataType=DATE) - start
22:11:41.065 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-10-16, dataType=DATE) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-10-16, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 3400, 100, 3, '2020-11-22 +04')) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-16) - start
22:11:41.065 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.065 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.065 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=15) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=id) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=name) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=purchasePrice) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=amount) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=markup) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.065 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=shelfLife) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=id) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.066 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=16, dataType=INTEGER) - start
22:11:41.066 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=16, dataType=INTEGER) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=16, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 3400, 100, 3, '2020-10-16 +04')) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=name) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.066 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Яблоки, dataType=VARCHAR) - start
22:11:41.066 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Яблоки, dataType=VARCHAR) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Яблоки, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Перец', 3400, 100, 3, '2020-10-16 +04')) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Яблоки) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Яблоки) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=purchaseprice) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.066 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=31920, dataType=INTEGER) - start
22:11:41.066 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=31920, dataType=INTEGER) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=31920, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 3400, 100, 3, '2020-10-16 +04')) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=amount) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.066 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=456, dataType=INTEGER) - start
22:11:41.066 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=456, dataType=INTEGER) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=456, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 31920, 100, 3, '2020-10-16 +04')) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=markup) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.066 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.067 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
22:11:41.067 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 31920, 456, 3, '2020-10-16 +04')) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=shelflife) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.067 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-02, dataType=DATE) - start
22:11:41.067 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-02, dataType=DATE) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-02, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 31920, 456, 4, '2020-10-16 +04')) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:41.067 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.067 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.067 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=16) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=id) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.067 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=name) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=purchasePrice) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=amount) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=markup) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=shelfLife) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=id) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=17, dataType=INTEGER) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=17, dataType=INTEGER) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=17, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 31920, 456, 4, '2020-12-02 +04')) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=name) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Бананы, dataType=VARCHAR) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Бананы, dataType=VARCHAR) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Бананы, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Яблоки', 31920, 456, 4, '2020-12-02 +04')) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Бананы) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Бананы) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=purchaseprice) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3894, dataType=INTEGER) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3894, dataType=INTEGER) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3894, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 31920, 456, 4, '2020-12-02 +04')) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=amount) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=66, dataType=INTEGER) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=66, dataType=INTEGER) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=66, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 3894, 456, 4, '2020-12-02 +04')) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=markup) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.068 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.068 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 3894, 66, 4, '2020-12-02 +04')) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=shelflife) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.069 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-10-30, dataType=DATE) - start
22:11:41.069 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-10-30, dataType=DATE) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-10-30, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 3894, 66, 5, '2020-12-02 +04')) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-30) - start
22:11:41.069 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.069 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.069 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=17) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=id) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=name) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=purchasePrice) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=amount) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=markup) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=shelfLife) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=id) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.069 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.069 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=18, dataType=INTEGER) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=18, dataType=INTEGER) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=18, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 3894, 66, 5, '2020-10-30 +04')) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=name) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Лук, dataType=VARCHAR) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Лук, dataType=VARCHAR) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Лук, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Бананы', 3894, 66, 5, '2020-10-30 +04')) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Лук) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Лук) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=purchaseprice) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1400, dataType=INTEGER) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1400, dataType=INTEGER) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1400, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 3894, 66, 5, '2020-10-30 +04')) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=amount) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=200, dataType=INTEGER) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=200, dataType=INTEGER) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=200, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 1400, 66, 5, '2020-10-30 +04')) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=markup) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 1400, 200, 5, '2020-10-30 +04')) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=shelflife) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-19, dataType=DATE) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-19, dataType=DATE) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-19, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 1400, 200, 1, '2020-10-30 +04')) - start
22:11:41.070 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.070 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.071 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=id) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=name) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=purchasePrice) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=amount) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=markup) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=shelfLife) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=id) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.071 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=19, dataType=INTEGER) - start
22:11:41.071 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=19, dataType=INTEGER) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=19, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 1400, 200, 1, '2020-12-19 +04')) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=name) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.071 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Молоко, dataType=VARCHAR) - start
22:11:41.071 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Молоко, dataType=VARCHAR) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Молоко, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Лук', 1400, 200, 1, '2020-12-19 +04')) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Молоко) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Молоко) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=purchaseprice) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.071 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=864, dataType=INTEGER) - start
22:11:41.071 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=864, dataType=INTEGER) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=864, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 1400, 200, 1, '2020-12-19 +04')) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=amount) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.071 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.072 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=16, dataType=INTEGER) - start
22:11:41.072 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=16, dataType=INTEGER) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=16, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 864, 200, 1, '2020-12-19 +04')) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=markup) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.072 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.072 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=20, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 864, 16, 1, '2020-12-19 +04')) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=shelflife) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.072 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-10-15, dataType=DATE) - start
22:11:41.072 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-10-15, dataType=DATE) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-10-15, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 864, 16, 20, '2020-12-19 +04')) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-15) - start
22:11:41.072 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.072 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.072 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=19) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=id) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=name) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=purchasePrice) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=amount) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.072 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=markup) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=shelfLife) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=id) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=20, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 864, 16, 20, '2020-10-15 +04')) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=name) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Пельмени, dataType=VARCHAR) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Пельмени, dataType=VARCHAR) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Пельмени, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Молоко', 864, 16, 20, '2020-10-15 +04')) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Пельмени) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Пельмени) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=purchaseprice) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=19500, dataType=INTEGER) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=19500, dataType=INTEGER) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=19500, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Пельмени', 864, 16, 20, '2020-10-15 +04')) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=amount) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=78, dataType=INTEGER) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=78, dataType=INTEGER) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=78, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Пельмени', 19500, 16, 20, '2020-10-15 +04')) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=markup) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=8, dataType=INTEGER) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=8, dataType=INTEGER) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=8, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Пельмени', 19500, 78, 20, '2020-10-15 +04')) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=shelflife) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-30, dataType=DATE) - start
22:11:41.073 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-30, dataType=DATE) - start
22:11:41.073 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-30, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Пельмени', 19500, 78, 8, '2020-10-15 +04')) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-30) - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.074 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=20) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=20, column=id) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=20) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=20, rowCount=20) - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
22:11:41.074 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.074 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.074 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.074 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.075 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.075 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=productdetails) - start
22:11:41.075 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.075 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.075 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.075 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.075 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.075 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.075 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.075 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.075 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=0) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=priceforoneitem) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=profit) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.075 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.075 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=productdetails, columns=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], keys=[], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.075 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=productdetails, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.075 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.075 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=productdetails, escapePattern=null) - start
22:11:41.075 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=name, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.075 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.075 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.075 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=priceforoneitem, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.075 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.075 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=priceforoneitem, escapePattern=null) - start
22:11:41.075 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=purchaseprice, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.075 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.075 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=purchaseprice, escapePattern=null) - start
22:11:41.075 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=profit, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.076 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.076 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=profit, escapePattern=null) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Мясо, dataType=VARCHAR) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Мясо, dataType=VARCHAR) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Мясо, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values (?, ?, ?, ?)) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Мясо) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Мясо) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=priceforoneitem) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=300, dataType=INTEGER) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=300, dataType=INTEGER) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=300, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Мясо', ?, ?, ?)) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=6000, dataType=INTEGER) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=6000, dataType=INTEGER) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=6000, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Мясо', 300, ?, ?)) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=profit) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=520, dataType=INTEGER) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=520, dataType=INTEGER) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=520, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Мясо', 300, 6000, ?)) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:41.076 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.076 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.078 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=1) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=priceforoneitem) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=profit) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.078 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Масло, dataType=VARCHAR) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Масло, dataType=VARCHAR) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Масло, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Мясо', 300, 6000, 520)) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Масло) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Масло) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=priceforoneitem) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=80, dataType=INTEGER) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=80, dataType=INTEGER) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=80, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Масло', 300, 6000, 520)) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9600, dataType=INTEGER) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9600, dataType=INTEGER) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9600, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Масло', 80, 6000, 520)) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=profit) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=415, dataType=INTEGER) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=415, dataType=INTEGER) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=415, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Масло', 80, 9600, 520)) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:41.079 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:41.079 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.080 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.080 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=2) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=priceforoneitem) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=profit) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.080 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Рис, dataType=VARCHAR) - start
22:11:41.080 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Рис, dataType=VARCHAR) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Рис, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Масло', 80, 9600, 415)) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Рис) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Рис) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=priceforoneitem) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.080 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=55, dataType=INTEGER) - start
22:11:41.080 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=55, dataType=INTEGER) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=55, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Рис', 80, 9600, 415)) - start
22:11:41.080 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.081 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3850, dataType=INTEGER) - start
22:11:41.081 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3850, dataType=INTEGER) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3850, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Рис', 55, 9600, 415)) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=profit) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.081 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=231, dataType=INTEGER) - start
22:11:41.081 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=231, dataType=INTEGER) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=231, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Рис', 55, 3850, 415)) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:41.081 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.081 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.081 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=3) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=priceforoneitem) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=profit) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.081 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Макароны, dataType=VARCHAR) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Макароны, dataType=VARCHAR) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Макароны, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Рис', 55, 3850, 231)) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Макароны) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Макароны) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=priceforoneitem) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=45, dataType=INTEGER) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=45, dataType=INTEGER) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=45, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Макароны', 55, 3850, 231)) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9000, dataType=INTEGER) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9000, dataType=INTEGER) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9000, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Макароны', 45, 3850, 231)) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=profit) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=156, dataType=INTEGER) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=156, dataType=INTEGER) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=156, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Макароны', 45, 9000, 231)) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:41.082 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.082 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.082 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=4) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=priceforoneitem) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=profit) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.083 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сок, dataType=VARCHAR) - start
22:11:41.083 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сок, dataType=VARCHAR) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сок, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Макароны', 45, 9000, 156)) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сок) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сок) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=priceforoneitem) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.083 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=67, dataType=INTEGER) - start
22:11:41.083 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=67, dataType=INTEGER) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=67, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Сок', 45, 9000, 156)) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.083 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1005, dataType=INTEGER) - start
22:11:41.083 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1005, dataType=INTEGER) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1005, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Сок', 67, 9000, 156)) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.083 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=profit) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.084 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=56, dataType=INTEGER) - start
22:11:41.084 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=56, dataType=INTEGER) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=56, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Сок', 67, 1005, 156)) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:41.084 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.084 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.084 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=5) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=priceforoneitem) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.084 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=profit) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.085 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Помидоры, dataType=VARCHAR) - start
22:11:41.085 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Помидоры, dataType=VARCHAR) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Помидоры, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Сок', 67, 1005, 56)) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Помидоры) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Помидоры) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=priceforoneitem) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.085 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=49, dataType=INTEGER) - start
22:11:41.085 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=49, dataType=INTEGER) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=49, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Помидоры', 67, 1005, 56)) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.085 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=24500, dataType=INTEGER) - start
22:11:41.085 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=24500, dataType=INTEGER) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=24500, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Помидоры', 49, 1005, 56)) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=profit) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.085 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=426, dataType=INTEGER) - start
22:11:41.085 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=426, dataType=INTEGER) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=426, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Помидоры', 49, 24500, 56)) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:41.085 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:41.086 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.086 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.086 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=6) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=priceforoneitem) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=profit) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.086 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Огурцы, dataType=VARCHAR) - start
22:11:41.086 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Огурцы, dataType=VARCHAR) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Огурцы, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Помидоры', 49, 24500, 426)) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Огурцы) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Огурцы) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=priceforoneitem) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.086 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=67, dataType=INTEGER) - start
22:11:41.086 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=67, dataType=INTEGER) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=67, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Огурцы', 49, 24500, 426)) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.086 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=46900, dataType=INTEGER) - start
22:11:41.086 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=46900, dataType=INTEGER) - start
22:11:41.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=46900, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Огурцы', 67, 24500, 426)) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=profit) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.087 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=408, dataType=INTEGER) - start
22:11:41.087 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=408, dataType=INTEGER) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=408, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Огурцы', 67, 46900, 426)) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:41.087 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.087 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.087 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=7) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=priceforoneitem) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=profit) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.087 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Яблоки, dataType=VARCHAR) - start
22:11:41.087 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Яблоки, dataType=VARCHAR) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Яблоки, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Огурцы', 67, 46900, 408)) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Яблоки) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Яблоки) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=priceforoneitem) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.087 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.088 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=70, dataType=INTEGER) - start
22:11:41.088 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=70, dataType=INTEGER) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=70, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Яблоки', 67, 46900, 408)) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.088 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=31920, dataType=INTEGER) - start
22:11:41.088 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=31920, dataType=INTEGER) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=31920, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Яблоки', 70, 46900, 408)) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=profit) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.088 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1108, dataType=INTEGER) - start
22:11:41.088 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1108, dataType=INTEGER) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1108, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Яблоки', 70, 31920, 408)) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:41.088 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.088 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.088 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=8) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=priceforoneitem) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.088 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=profit) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Лук, dataType=VARCHAR) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Лук, dataType=VARCHAR) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Лук, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Яблоки', 70, 31920, 1108)) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Лук) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Лук) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=priceforoneitem) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Лук', 70, 31920, 1108)) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1400, dataType=INTEGER) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1400, dataType=INTEGER) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1400, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Лук', 7, 31920, 1108)) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=profit) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=12, dataType=INTEGER) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=12, dataType=INTEGER) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=12, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Лук', 7, 1400, 1108)) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.089 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.089 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.090 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=priceforoneitem) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=profit) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.090 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Пельмени, dataType=VARCHAR) - start
22:11:41.090 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Пельмени, dataType=VARCHAR) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Пельмени, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Лук', 7, 1400, 12)) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Пельмени) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Пельмени) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=priceforoneitem) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.090 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=250, dataType=INTEGER) - start
22:11:41.090 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=250, dataType=INTEGER) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=250, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Пельмени', 7, 1400, 12)) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.090 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=19500, dataType=INTEGER) - start
22:11:41.090 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=19500, dataType=INTEGER) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=19500, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Пельмени', 250, 1400, 12)) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=profit) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.090 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1352, dataType=INTEGER) - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1352, dataType=INTEGER) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1352, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Пельмени', 250, 19500, 12)) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.091 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=10) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=10) - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
22:11:41.091 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.091 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.091 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.091 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.091 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=expiredproducts) - start
22:11:41.091 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.091 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.091 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.091 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.091 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.091 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=0) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.091 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.091 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=expiredproducts, columns=[(name, VARCHAR, nullable)], keys=[], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.092 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=expiredproducts, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.092 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.092 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=expiredproducts, escapePattern=null) - start
22:11:41.092 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=name, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.092 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.092 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.092 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into public.expiredproducts (name) values (?), connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.092 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.092 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.092 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.092 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:41.092 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.092 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.092 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Хлеб, dataType=VARCHAR) - start
22:11:41.092 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Хлеб, dataType=VARCHAR) - start
22:11:41.092 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Хлеб, column=1, statement=insert into public.expiredproducts (name) values (?)) - start
22:11:41.092 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Хлеб) - start
22:11:41.092 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Хлеб) - start
22:11:41.092 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.092 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.094 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=1) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=9) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=9) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.094 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сыр, dataType=VARCHAR) - start
22:11:41.094 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сыр, dataType=VARCHAR) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сыр, column=1, statement=insert into public.expiredproducts (name) values ('Хлеб')) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сыр) - start
22:11:41.094 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сыр) - start
22:11:41.094 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.094 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.095 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=2) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=9) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=9) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.095 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Йогурт, dataType=VARCHAR) - start
22:11:41.095 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Йогурт, dataType=VARCHAR) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Йогурт, column=1, statement=insert into public.expiredproducts (name) values ('Сыр')) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Йогурт) - start
22:11:41.095 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Йогурт) - start
22:11:41.095 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.095 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.096 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=3) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=9) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=9) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.096 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сосиски, dataType=VARCHAR) - start
22:11:41.096 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сосиски, dataType=VARCHAR) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сосиски, column=1, statement=insert into public.expiredproducts (name) values ('Йогурт')) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сосиски) - start
22:11:41.096 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сосиски) - start
22:11:41.096 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.096 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.097 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=4) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=9) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=9) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.097 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Рыба, dataType=VARCHAR) - start
22:11:41.097 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Рыба, dataType=VARCHAR) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Рыба, column=1, statement=insert into public.expiredproducts (name) values ('Сосиски')) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Рыба) - start
22:11:41.097 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Рыба) - start
22:11:41.097 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.097 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.098 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=5) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=9) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=9) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.098 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Яйца, dataType=VARCHAR) - start
22:11:41.098 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Яйца, dataType=VARCHAR) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Яйца, column=1, statement=insert into public.expiredproducts (name) values ('Рыба')) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Яйца) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Яйца) - start
22:11:41.098 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.098 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.098 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=6) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=9) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.098 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=9) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.099 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Перец, dataType=VARCHAR) - start
22:11:41.099 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Перец, dataType=VARCHAR) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Перец, column=1, statement=insert into public.expiredproducts (name) values ('Яйца')) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Перец) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Перец) - start
22:11:41.099 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.099 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.099 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=7) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=9) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=9) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.099 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Бананы, dataType=VARCHAR) - start
22:11:41.099 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Бананы, dataType=VARCHAR) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Бананы, column=1, statement=insert into public.expiredproducts (name) values ('Перец')) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Бананы) - start
22:11:41.099 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Бананы) - start
22:11:41.099 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.099 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.100 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=8) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=9) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=9) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.100 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Молоко, dataType=VARCHAR) - start
22:11:41.100 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Молоко, dataType=VARCHAR) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Молоко, column=1, statement=insert into public.expiredproducts (name) values ('Бананы')) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Молоко) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Молоко) - start
22:11:41.100 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.100 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.100 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=9) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.100 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=9) - start
22:11:41.100 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
22:11:41.101 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
22:11:41.101 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.101 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
22:11:41.101 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.101 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
22:11:41.101 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
22:11:41.101 [main] DEBUG org.dbunit.DefaultOperationListener - operationSetUpFinished(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.101 [main] DEBUG org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@402c4085, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@14028087}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.101 [main] DEBUG org.dbunit.database.DatabaseConnection - close() - start
22:11:41.152 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
22:11:41.153 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
22:11:41.153 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
22:11:41.153 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
22:11:41.154 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@25be7b63, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@28dcca0c) - start
22:11:41.154 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@25be7b63, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@28dcca0c) - start
22:11:41.154 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.154 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)]) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.155 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
22:11:41.155 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.156 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=5) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=5) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=6) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=6) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.157 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=7) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=7) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.157 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=8) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=8) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.158 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=9) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=9) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.158 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=10) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=10) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.159 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=11) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=11) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.159 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=12) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=12) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=13) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=13) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.160 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=14) - start
22:11:41.160 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=14) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=15) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=15) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=16) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=16) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.161 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=17) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=17) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.161 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=18) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=18) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=19) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=19) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.162 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=20) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=20) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.163 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.163 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)]) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.163 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.163 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.163 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Мясо) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Мясо) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Масло) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Масло) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Рис) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Рис) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Макароны) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Макароны) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.164 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сок) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сок) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Помидоры) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Помидоры) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Огурцы) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Огурцы) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Яблоки) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Яблоки) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.165 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Лук) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Лук) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Пельмени) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Пельмени) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.166 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.166 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown)]) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.166 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.166 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.166 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Хлеб) - start
22:11:41.166 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Хлеб) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сыр) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сыр) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Йогурт) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Йогурт) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сосиски) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сосиски) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.167 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Рыба) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Рыба) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Яйца) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Яйца) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Перец) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Перец) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Бананы) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Бананы) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@45d84a20) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Молоко) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Молоко) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.169 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
22:11:41.169 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[foodstuffs, productdetails, expiredproducts], _tableMap={PRODUCTDETAILS=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], FOODSTUFFS=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], EXPIREDPRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]}, _caseSensitiveTableNames=false]
22:11:41.170 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
22:11:41.170 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:postgresql://localhost:5432/TestLab2Expected) - start
22:11:41.215 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=public (dbIdentifierQuoteString=")
22:11:41.216 [main] DEBUG org.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:41.216 [main] DEBUG org.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
22:11:41.218 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.220 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals(expectedDataSet=AbstractDataSet[_orderedTableNameMap=null], actualDataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.221 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals(expectedDataSet=AbstractDataSet[_orderedTableNameMap=null], actualDataSet=AbstractDataSet[_orderedTableNameMap=null], failureHandler=null) - start
22:11:41.221 [main] DEBUG org.dbunit.assertion.DbUnitAssert - FailureHandler is null. Using default implementation
22:11:41.221 [main] DEBUG org.dbunit.assertion.DbUnitAssert - getSortedUpperTableNames(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTableNames() - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.221 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.221 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.221 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.221 [main] DEBUG org.dbunit.assertion.DbUnitAssert - getSortedUpperTableNames(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.221 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.221 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
22:11:41.225 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:41.225 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.postgresql.jdbc.PgResultSet@4f32a3ad
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@6b695b06}]) - start
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=expiredproducts, escapePattern=null) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=null) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@6b695b06}]) - start
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=foodstuffs, escapePattern=null) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=null) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@6b695b06}]) - start
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.225 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=productdetails, escapePattern=null) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=null) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.225 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.226 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=EXPIREDPRODUCTS) - start
22:11:41.226 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:41.226 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
22:11:41.226 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.226 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.226 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=EXPIREDPRODUCTS) - start
22:11:41.226 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.226 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=EXPIREDPRODUCTS) - start
22:11:41.226 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.226 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.226 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.226 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.226 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.226 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=EXPIREDPRODUCTS (dbIdentifierQuoteString=")
22:11:41.226 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=EXPIREDPRODUCTS newValue=expiredproducts
22:11:41.226 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'expiredproducts' exists in schema 'public' ...
22:11:41.228 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@4d1bf319) - start
22:11:41.228 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=EXPIREDPRODUCTS, object=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]) - start
22:11:41.238 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.238 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.238 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.238 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.240 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
22:11:41.240 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=public, metaData=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[], escapePattern=null) - start
22:11:41.241 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.241 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.241 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.241 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.241 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.241 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=expiredproducts, escapePattern=null) - start
22:11:41.241 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select name from public.expiredproducts
22:11:41.243 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]], _resultSet=[org.postgresql.jdbc.PgResultSet@3de8f619], _statement=[org.postgresql.jdbc.PgStatement@2ab4bc72]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
22:11:41.244 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.244 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.244 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.244 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.244 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.244 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.244 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.245 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.245 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.245 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.245 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.245 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@3de8f619) - start
22:11:41.245 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=name) - start
22:11:41.245 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]
22:11:41.245 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[], _rowList.size()=9]
22:11:41.245 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
22:11:41.245 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.245 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]) - start
22:11:41.245 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.246 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.246 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], columnsToSearch=[(name, VARCHAR, nullable)])
22:11:41.246 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.246 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[], columnsToSearch=[(name, UNKNOWN, nullableUnknown)])
22:11:41.246 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=expiredproducts, expectedColumn=(name, UNKNOWN, nullableUnknown), actualColumn=(name, VARCHAR, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.247 [main] DEBUG org.dbunit.assertion.DbUnitAssert - compareData(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[], _rowList.size()=9], comparisonCols=[org.dbunit.assertion.DbUnitAssert$ComparisonColumn@2de56eb2], failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Хлеб, o2=Хлеб) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=9) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=9) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сыр, o2=Сыр) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=9) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=9) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.247 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Йогурт, o2=Йогурт) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сосиски, o2=Сосиски) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Рыба, o2=Рыба) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Яйца, o2=Яйца) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Перец, o2=Перец) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Бананы, o2=Бананы) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=9) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Молоко, o2=Молоко) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=FOODSTUFFS) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
22:11:41.248 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.248 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=FOODSTUFFS) - start
22:11:41.248 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.248 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=FOODSTUFFS) - start
22:11:41.248 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.248 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.248 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.248 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=FOODSTUFFS (dbIdentifierQuoteString=")
22:11:41.248 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=FOODSTUFFS newValue=foodstuffs
22:11:41.248 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'foodstuffs' exists in schema 'public' ...
22:11:41.252 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@5f8e8a9d) - start
22:11:41.252 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=FOODSTUFFS, object=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]) - start
22:11:41.260 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.260 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.260 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.260 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.261 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
22:11:41.261 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=public, metaData=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[], escapePattern=null) - start
22:11:41.261 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.261 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=purchaseprice, escapePattern=null) - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=amount, escapePattern=null) - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=markup, escapePattern=null) - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=shelflife, escapePattern=null) - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.261 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=foodstuffs, escapePattern=null) - start
22:11:41.261 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select id, name, purchaseprice, amount, markup, shelflife from public.foodstuffs
22:11:41.262 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]], _resultSet=[org.postgresql.jdbc.PgResultSet@5745ca0e], _statement=[org.postgresql.jdbc.PgStatement@3ad83a66]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
22:11:41.262 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.262 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=id) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.262 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.262 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.262 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=name) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.262 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.262 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=purchaseprice) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.262 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.262 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=amount) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.262 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.262 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=markup) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.262 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.262 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=shelflife) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.262 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.262 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.263 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=id) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.263 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.263 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=name) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.263 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.263 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=purchaseprice) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.263 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.263 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=amount) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.263 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.263 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=markup) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.263 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.263 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=shelflife) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.263 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.263 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=id) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=name) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=purchaseprice) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=amount) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=markup) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=shelflife) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=id) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=name) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=purchaseprice) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=amount) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=markup) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.264 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=shelflife) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.264 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.264 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=id) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=name) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=purchaseprice) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=amount) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=markup) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=shelflife) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=id) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=name) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=purchaseprice) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.265 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.265 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=amount) - start
22:11:41.265 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.266 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=markup) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.266 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=shelflife) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.266 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=id) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.266 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=name) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.266 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=purchaseprice) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.266 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=amount) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.266 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=markup) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.266 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=shelflife) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.266 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.266 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=id) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=name) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=purchaseprice) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=amount) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=markup) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=shelflife) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=id) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=name) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.267 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=purchaseprice) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.267 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.267 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=amount) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=markup) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=shelflife) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=id) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=name) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=purchaseprice) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=amount) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=markup) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.268 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=shelflife) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.268 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.268 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=id) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=name) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=purchaseprice) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=amount) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=markup) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=shelflife) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=id) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=name) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=purchaseprice) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.269 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.269 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=amount) - start
22:11:41.269 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=markup) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=shelflife) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=id) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=name) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=purchaseprice) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=amount) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=markup) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=shelflife) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.270 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=id) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.270 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.270 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=name) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=purchaseprice) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=amount) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=markup) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=shelflife) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=id) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=name) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=purchaseprice) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=amount) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=markup) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.271 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.271 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=shelflife) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.271 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=id) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=name) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=purchaseprice) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=amount) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=markup) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=shelflife) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=id) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=name) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.272 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=purchaseprice) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.272 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.272 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=amount) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=markup) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=shelflife) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=id) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=name) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=purchaseprice) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=amount) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=markup) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=shelflife) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.273 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.273 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.273 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=id) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=name) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=purchaseprice) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=amount) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=markup) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=shelflife) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=id) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=name) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=purchaseprice) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=amount) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.274 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=markup) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.274 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.274 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.275 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=shelflife) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.275 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@5745ca0e) - start
22:11:41.275 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=20, columnName=id) - start
22:11:41.275 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]
22:11:41.275 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[], _rowList.size()=20]
22:11:41.275 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(name, UNKNOWN, nullableUnknown), o2=(id, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(purchasePrice, UNKNOWN, nullableUnknown), o2=(name, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, UNKNOWN, nullableUnknown), o2=(purchasePrice, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, UNKNOWN, nullableUnknown), o2=(name, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, UNKNOWN, nullableUnknown), o2=(id, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(markup, UNKNOWN, nullableUnknown), o2=(name, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(markup, UNKNOWN, nullableUnknown), o2=(id, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(shelfLife, UNKNOWN, nullableUnknown), o2=(markup, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(shelfLife, UNKNOWN, nullableUnknown), o2=(purchasePrice, UNKNOWN, nullableUnknown)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]) - start
22:11:41.275 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(name, VARCHAR, noNulls), o2=(id, INTEGER, noNulls)) - start
22:11:41.275 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(purchaseprice, INTEGER, noNulls), o2=(name, VARCHAR, noNulls)) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, INTEGER, nullable), o2=(purchaseprice, INTEGER, noNulls)) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, INTEGER, nullable), o2=(name, VARCHAR, noNulls)) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, INTEGER, nullable), o2=(id, INTEGER, noNulls)) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(markup, INTEGER, nullable), o2=(name, VARCHAR, noNulls)) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(markup, INTEGER, nullable), o2=(id, INTEGER, noNulls)) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(shelflife, DATE, nullable), o2=(markup, INTEGER, nullable)) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(shelflife, DATE, nullable), o2=(purchaseprice, INTEGER, noNulls)) - start
22:11:41.276 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], columnsToSearch=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)])
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[], columnsToSearch=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)])
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.276 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(amount, UNKNOWN, nullableUnknown), actualColumn=(amount, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.276 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(id, UNKNOWN, nullableUnknown), actualColumn=(id, INTEGER, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.276 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(markup, UNKNOWN, nullableUnknown), actualColumn=(markup, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.276 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(name, UNKNOWN, nullableUnknown), actualColumn=(name, VARCHAR, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.276 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(purchasePrice, UNKNOWN, nullableUnknown), actualColumn=(purchaseprice, INTEGER, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.276 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(shelfLife, UNKNOWN, nullableUnknown), actualColumn=(shelflife, DATE, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.276 [main] DEBUG org.dbunit.assertion.DbUnitAssert - compareData(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[], _rowList.size()=20], comparisonCols=[org.dbunit.assertion.DbUnitAssert$ComparisonColumn@338fc1d8, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@4722ef0c, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@48e1f6c7, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@55cb6996, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@1807e3f6, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@480d3575], failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=100, o2=100) - start
22:11:41.276 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=100, value2=100) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1, o2=1) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=markup) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=markup) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3, o2=3) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3, value2=3) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Хлеб, o2=Хлеб) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchasePrice) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchasePrice) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3300, o2=3300) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:41.277 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3300, value2=3300) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=shelfLife) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=shelfLife) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-08-20, o2=2020-08-20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-08-20, value2=2020-08-20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=20, o2=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=20, value2=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
22:11:41.278 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=markup) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=markup) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=10, o2=10) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=10, value2=10) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Мясо, o2=Мясо) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchasePrice) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchasePrice) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=6000, o2=6000) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=6000, value2=6000) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=shelfLife) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=shelfLife) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-02, o2=2020-12-02) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-02, value2=2020-12-02) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.279 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=30, o2=30) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=30, value2=30) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3, o2=3) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3, value2=3) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=markup) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=markup) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=15, o2=15) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сыр, o2=Сыр) - start
22:11:41.280 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchasePrice) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchasePrice) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=4500, o2=4500) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=4500, value2=4500) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=shelfLife) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=shelfLife) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-11-02, o2=2020-11-02) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-02) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-02) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-11-02, value2=2020-11-02) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=50, o2=50) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=50, value2=50) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=4, o2=4) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=4, value2=4) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=markup) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=markup) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Йогурт, o2=Йогурт) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchasePrice) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchasePrice) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1500, o2=1500) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1500, value2=1500) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=shelfLife) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=shelfLife) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.282 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-07-15, o2=2020-07-15) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-07-15) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-07-15) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-07-15, value2=2020-07-15) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=amount) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=amount) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=120, o2=120) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=120, value2=120) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5, o2=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5, value2=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=markup) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=markup) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5, o2=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5, value2=5) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.283 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Масло, o2=Масло) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchasePrice) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchasePrice) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9600, o2=9600) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9600, value2=9600) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=shelfLife) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=shelfLife) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-19, o2=2020-12-19) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-19, value2=2020-12-19) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=amount) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=amount) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.284 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=70, o2=70) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=70, value2=70) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=6, o2=6) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=6, value2=6) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=markup) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=markup) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Рис, o2=Рис) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchasePrice) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchasePrice) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3850, o2=3850) - start
22:11:41.285 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3850, value2=3850) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=shelfLife) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=shelfLife) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-04, o2=2020-12-04) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-04) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-04) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-04, value2=2020-12-04) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=amount) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=amount) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=35, o2=35) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=35, value2=35) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=id) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=id) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=markup) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=markup) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.286 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Гречка, o2=Гречка) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchasePrice) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchasePrice) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2100, o2=2100) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2100, value2=2100) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=shelfLife) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=shelfLife) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-11-10, o2=2020-11-10) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-10) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-10) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-11-10, value2=2020-11-10) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=amount) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=amount) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=200, o2=200) - start
22:11:41.287 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=200, value2=200) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=id) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=id) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=8, o2=8) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=8, value2=8) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=markup) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=markup) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Макароны, o2=Макароны) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchasePrice) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchasePrice) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9000, o2=9000) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9000, value2=9000) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=shelfLife) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=shelfLife) - start
22:11:41.288 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-25, o2=2020-12-25) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-25) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-25) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-25, value2=2020-12-25) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=amount) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=amount) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=10, o2=10) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=10, value2=10) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=id) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=id) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9, o2=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9, value2=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=markup) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=markup) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9, o2=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9, value2=9) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.289 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сосиски, o2=Сосиски) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchasePrice) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchasePrice) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1800, o2=1800) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1800, value2=1800) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=shelfLife) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=shelfLife) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-10-21, o2=2020-10-21) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-21) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-21) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-10-21, value2=2020-10-21) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=amount) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=amount) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5, o2=5) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5, value2=5) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=id) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=id) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=10, o2=10) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=10, value2=10) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=markup) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=markup) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=15, o2=15) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.290 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Рыба, o2=Рыба) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2800, o2=2800) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2800, value2=2800) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=shelfLife) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=shelfLife) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-08-16, o2=2020-08-16) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-16) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-16) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-08-16, value2=2020-08-16) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=amount) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=amount) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=15, o2=15) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=id) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=id) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=11, o2=11) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=11, value2=11) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=markup) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=markup) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сок, o2=Сок) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=purchasePrice) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.291 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1005, o2=1005) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1005, value2=1005) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=shelfLife) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=shelfLife) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-29, o2=2020-12-29) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-29) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-29) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-29, value2=2020-12-29) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=amount) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=amount) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=77, o2=77) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=77, value2=77) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=id) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=id) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=12, o2=12) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=12, value2=12) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=markup) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=markup) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1, o2=1) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=name) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=name) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Яйца, o2=Яйца) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=purchasePrice) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=purchasePrice) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5929, o2=5929) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5929, value2=5929) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=shelfLife) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.292 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=shelfLife) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-09-01, o2=2020-09-01) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-09-01) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-09-01) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-09-01, value2=2020-09-01) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=amount) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=amount) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=500, o2=500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=500, value2=500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=id) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=id) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=13, o2=13) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=13, value2=13) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=markup) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=markup) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=name) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=name) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Помидоры, o2=Помидоры) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=purchasePrice) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=purchasePrice) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=24500, o2=24500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=24500, value2=24500) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=shelfLife) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.293 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-11, o2=2020-12-11) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-11) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-11) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-11, value2=2020-12-11) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=amount) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=amount) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=700, o2=700) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=700, value2=700) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=id) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=id) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=14, o2=14) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=14, value2=14) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=markup) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=markup) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1, o2=1) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=name) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=name) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Огурцы, o2=Огурцы) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=purchasePrice) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=purchasePrice) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=46900, o2=46900) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=46900, value2=46900) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-11-22, o2=2020-11-22) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-22) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-22) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-11-22, value2=2020-11-22) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=amount) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.294 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=100, o2=100) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=100, value2=100) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=id) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=id) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=15, o2=15) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=markup) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=markup) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3, o2=3) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3, value2=3) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=name) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=name) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Перец, o2=Перец) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=purchasePrice) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=purchasePrice) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3400, o2=3400) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3400, value2=3400) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=shelfLife) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=shelfLife) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-10-16, o2=2020-10-16) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-16) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-16) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-10-16, value2=2020-10-16) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=456, o2=456) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:41.295 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=456, value2=456) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=id) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=id) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=16, o2=16) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=16, value2=16) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=markup) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=markup) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=4, o2=4) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=4, value2=4) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=name) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=name) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Яблоки, o2=Яблоки) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=purchasePrice) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=purchasePrice) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=31920, o2=31920) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=31920, value2=31920) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=shelfLife) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=shelfLife) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-02, o2=2020-12-02) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-02, value2=2020-12-02) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=amount) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=amount) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=66, o2=66) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=66, value2=66) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=id) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.296 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=17, o2=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=17, value2=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5, o2=5) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5, value2=5) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=name) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=name) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Бананы, o2=Бананы) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=purchasePrice) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=purchasePrice) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3894, o2=3894) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3894, value2=3894) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=shelfLife) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=shelfLife) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-10-30, o2=2020-10-30) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-30) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-30) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-10-30, value2=2020-10-30) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=amount) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=amount) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=200, o2=200) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=200, value2=200) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=18, o2=18) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=18, value2=18) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=markup) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1, o2=1) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=name) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=name) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Лук, o2=Лук) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=purchasePrice) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=purchasePrice) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1400, o2=1400) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1400, value2=1400) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=shelfLife) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=shelfLife) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-19, o2=2020-12-19) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-19, value2=2020-12-19) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=amount) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=amount) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=16, o2=16) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=16, value2=16) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=id) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=id) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=19, o2=19) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:41.298 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=19, value2=19) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=markup) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=markup) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=20, o2=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=20, value2=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=name) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=name) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Молоко, o2=Молоко) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=purchasePrice) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=purchasePrice) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=864, o2=864) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=864, value2=864) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=shelfLife) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=shelfLife) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-10-15, o2=2020-10-15) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-15) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-15) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-10-15, value2=2020-10-15) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=amount) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.299 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=amount) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=78, o2=78) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=78, value2=78) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=id) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=id) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=20, o2=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=20, value2=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=markup) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=markup) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=8, o2=8) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=8, value2=8) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=name) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=name) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Пельмени, o2=Пельмени) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=purchasePrice) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=purchasePrice) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=19500, o2=19500) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=19500, value2=19500) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=shelfLife) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=shelfLife) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-30, o2=2020-12-30) - start
22:11:41.300 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-30) - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-30) - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-30, value2=2020-12-30) - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=PRODUCTDETAILS) - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
22:11:41.301 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.301 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=PRODUCTDETAILS) - start
22:11:41.301 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.301 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=PRODUCTDETAILS) - start
22:11:41.301 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.301 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.301 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.301 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=PRODUCTDETAILS (dbIdentifierQuoteString=")
22:11:41.301 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=PRODUCTDETAILS newValue=productdetails
22:11:41.301 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'productdetails' exists in schema 'public' ...
22:11:41.304 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@26abb146) - start
22:11:41.304 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=PRODUCTDETAILS, object=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]) - start
22:11:41.316 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.316 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.316 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.316 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.316 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
22:11:41.316 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=public, metaData=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[], escapePattern=null) - start
22:11:41.316 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.316 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=priceforoneitem, escapePattern=null) - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=purchaseprice, escapePattern=null) - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=profit, escapePattern=null) - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.316 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=productdetails, escapePattern=null) - start
22:11:41.316 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select name, priceforoneitem, purchaseprice, profit from public.productdetails
22:11:41.318 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]], _resultSet=[org.postgresql.jdbc.PgResultSet@72c8e7b], _statement=[org.postgresql.jdbc.PgStatement@65f8f5ae]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
22:11:41.318 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.318 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=name) - start
22:11:41.318 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.318 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.318 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.318 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.318 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.318 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=priceforoneitem) - start
22:11:41.318 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.318 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.318 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.318 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.318 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=name) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=priceforoneitem) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=name) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=priceforoneitem) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.319 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.319 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=name) - start
22:11:41.319 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.320 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.320 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.320 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.321 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.321 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.321 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=purchaseprice) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.322 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.322 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=profit) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.322 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@72c8e7b) - start
22:11:41.322 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=name) - start
22:11:41.322 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]
22:11:41.322 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[], _rowList.size()=10]
22:11:41.322 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(priceforoneitem, UNKNOWN, nullableUnknown), o2=(name, UNKNOWN, nullableUnknown)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(purchaseprice, UNKNOWN, nullableUnknown), o2=(priceforoneitem, UNKNOWN, nullableUnknown)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, UNKNOWN, nullableUnknown), o2=(purchaseprice, UNKNOWN, nullableUnknown)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, UNKNOWN, nullableUnknown), o2=(priceforoneitem, UNKNOWN, nullableUnknown)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, UNKNOWN, nullableUnknown), o2=(purchaseprice, UNKNOWN, nullableUnknown)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]) - start
22:11:41.322 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(priceforoneitem, INTEGER, nullable), o2=(name, VARCHAR, nullable)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(purchaseprice, INTEGER, nullable), o2=(priceforoneitem, INTEGER, nullable)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, INTEGER, nullable), o2=(purchaseprice, INTEGER, nullable)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, INTEGER, nullable), o2=(priceforoneitem, INTEGER, nullable)) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, INTEGER, nullable), o2=(purchaseprice, INTEGER, nullable)) - start
22:11:41.322 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], columnsToSearch=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)])
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[], columnsToSearch=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)])
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.322 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.322 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=productdetails, expectedColumn=(name, UNKNOWN, nullableUnknown), actualColumn=(name, VARCHAR, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.322 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=productdetails, expectedColumn=(priceforoneitem, UNKNOWN, nullableUnknown), actualColumn=(priceforoneitem, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.322 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=productdetails, expectedColumn=(profit, UNKNOWN, nullableUnknown), actualColumn=(profit, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.322 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=productdetails, expectedColumn=(purchaseprice, UNKNOWN, nullableUnknown), actualColumn=(purchaseprice, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.322 [main] DEBUG org.dbunit.assertion.DbUnitAssert - compareData(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[], _rowList.size()=10], comparisonCols=[org.dbunit.assertion.DbUnitAssert$ComparisonColumn@5b7a7f33, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@790da477, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@5c7933ad, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@57bc27f5], failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Мясо, o2=Мясо) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=priceforoneitem) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=priceforoneitem) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=300, o2=300) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=300, value2=300) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=profit) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=profit) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=520, o2=520) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=520, value2=520) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=6000, o2=6000) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=6000, value2=6000) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Масло, o2=Масло) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=80, o2=80) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=80, value2=80) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=profit) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=profit) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=415, o2=415) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=415, value2=415) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9600, o2=9600) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9600, value2=9600) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Рис, o2=Рис) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=priceforoneitem) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.324 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=55, o2=55) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=55, value2=55) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=profit) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=profit) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=231, o2=231) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=231, value2=231) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3850, o2=3850) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3850, value2=3850) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Макароны, o2=Макароны) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=priceforoneitem) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=priceforoneitem) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=45, o2=45) - start
22:11:41.325 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=45, value2=45) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=156, o2=156) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=156, value2=156) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9000, o2=9000) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9000, value2=9000) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сок, o2=Сок) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=priceforoneitem) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=priceforoneitem) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=67, o2=67) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=67, value2=67) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.326 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=56, o2=56) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=56, value2=56) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1005, o2=1005) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1005, value2=1005) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Помидоры, o2=Помидоры) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=priceforoneitem) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=priceforoneitem) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=49, o2=49) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=49, value2=49) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=426, o2=426) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:41.327 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=426, value2=426) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=24500, o2=24500) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=24500, value2=24500) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Огурцы, o2=Огурцы) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=priceforoneitem) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=priceforoneitem) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=67, o2=67) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=67, value2=67) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=profit) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=profit) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=408, o2=408) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=408, value2=408) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.328 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=46900, o2=46900) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=46900, value2=46900) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Яблоки, o2=Яблоки) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=priceforoneitem) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=priceforoneitem) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=70, o2=70) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=70, value2=70) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=profit) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=profit) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1108, o2=1108) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1108, value2=1108) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=31920, o2=31920) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.329 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=31920, value2=31920) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Лук, o2=Лук) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=priceforoneitem) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=priceforoneitem) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=profit) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=profit) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=12, o2=12) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=12, value2=12) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1400, o2=1400) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1400, value2=1400) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.330 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Пельмени, o2=Пельмени) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=priceforoneitem) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=priceforoneitem) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=250, o2=250) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=250, value2=250) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=profit) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=profit) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1352, o2=1352) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1352, value2=1352) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=19500, o2=19500) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=19500, value2=19500) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=expiredproducts) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
22:11:41.331 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.331 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.335 [main] DEBUG org.dbunit.DatabaseTestCase - tearDown() - start
22:11:41.336 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=driverClass, property=org.postgresql.Driver) - start
22:11:41.336 [main] DEBUG org.dbunit.AbstractDatabaseTester - setTearDownOperation(tearDownOperation=org.dbunit.operation.DeleteAllOperation@1356d4d4) - start
22:11:41.336 [main] DEBUG org.dbunit.AbstractDatabaseTester - setDataSet(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.336 [main] DEBUG org.dbunit.DatabaseTestCase - getOperationListener() - start
22:11:41.336 [main] DEBUG org.dbunit.AbstractDatabaseTester - setOperationListener(operationListener=org.dbunit.DatabaseTestCase$1@333d4a8c) - start
22:11:41.336 [main] DEBUG org.dbunit.AbstractDatabaseTester - onTearDown() - start
22:11:41.336 [main] DEBUG org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.DeleteAllOperation@1356d4d4) - start
22:11:41.336 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
22:11:41.336 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:postgresql://localhost:5432/TestLab2Expected) - start
22:11:41.393 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=public (dbIdentifierQuoteString=")
22:11:41.394 [main] DEBUG org.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:41.394 [main] DEBUG org.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
22:11:41.397 [main] DEBUG org.dbunit.DefaultOperationListener - connectionCreated(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=null]) - start
22:11:41.397 [main] DEBUG org.dbunit.AbstractDatabaseTester - getDataSet() - start
22:11:41.397 [main] DEBUG org.dbunit.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.397 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.397 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.397 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.397 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
22:11:41.397 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
22:11:41.397 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
22:11:41.397 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.398 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.398 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.398 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.398 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.398 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.398 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:41.398 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.398 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:41.398 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.398 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:41.398 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.398 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=expiredproducts) - start
22:11:41.398 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.398 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
22:11:41.402 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:41.402 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.postgresql.jdbc.PgResultSet@30f842ca
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}]) - start
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=expiredproducts, escapePattern=null) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=null) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}]) - start
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=foodstuffs, escapePattern=null) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=null) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}]) - start
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.403 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=productdetails, escapePattern=null) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=null) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.403 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.403 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=expiredproducts (dbIdentifierQuoteString=")
22:11:41.403 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'expiredproducts' exists in schema 'public' ...
22:11:41.405 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@69c81773) - start
22:11:41.405 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=expiredproducts, object=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]) - start
22:11:41.421 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.421 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.421 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.421 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.421 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=expiredproducts, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.421 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.421 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=expiredproducts, escapePattern=null) - start
22:11:41.421 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.expiredproducts) - start
22:11:41.421 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.expiredproducts
22:11:41.421 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=productdetails) - start
22:11:41.421 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.421 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.421 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.421 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.421 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.421 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=productdetails (dbIdentifierQuoteString=")
22:11:41.421 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'productdetails' exists in schema 'public' ...
22:11:41.424 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@4d14b6c2) - start
22:11:41.424 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=productdetails, object=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]) - start
22:11:41.434 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.434 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.434 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.434 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.434 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=productdetails, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.435 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.435 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=productdetails, escapePattern=null) - start
22:11:41.435 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.productdetails) - start
22:11:41.435 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.productdetails
22:11:41.435 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=foodstuffs) - start
22:11:41.435 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.435 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=foodstuffs (dbIdentifierQuoteString=")
22:11:41.435 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'foodstuffs' exists in schema 'public' ...
22:11:41.437 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@7e990ed7) - start
22:11:41.437 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=foodstuffs, object=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]) - start
22:11:41.449 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.449 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.449 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.449 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.449 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=foodstuffs, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.450 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.450 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=foodstuffs, escapePattern=null) - start
22:11:41.450 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.foodstuffs) - start
22:11:41.450 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.foodstuffs
22:11:41.450 [main] DEBUG org.dbunit.database.statement.SimpleStatement - executeBatch() - start
22:11:41.450 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.expiredproducts
22:11:41.451 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.productdetails
22:11:41.452 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.foodstuffs
22:11:41.453 [main] DEBUG org.dbunit.database.statement.SimpleStatement - clearBatch() - start
22:11:41.454 [main] DEBUG org.dbunit.database.statement.AbstractBatchStatement - close() - start
22:11:41.454 [main] DEBUG org.dbunit.DefaultOperationListener - operationTearDownFinished(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.454 [main] DEBUG org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@55de24cc, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@dc7df28}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.454 [main] DEBUG org.dbunit.database.DatabaseConnection - close() - start
]]></system-out>
  </testcase>
  <testcase name="testGetAllFromView" classname="FoodstuffsTest" time="3.485">
    <failure message="expected:&lt;10&gt; but was:&lt;7&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected:<10> but was:<7>
	at FoodstuffsTest.testGetAllFromView(FoodstuffsTest.java:57)
]]></failure>
    <system-out><![CDATA[22:11:41.465 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=driverClass, property=org.postgresql.Driver) - start
22:11:41.465 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
22:11:41.465 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
22:11:41.465 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
22:11:41.465 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
22:11:41.467 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1be2019a, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@29d80d2b) - start
22:11:41.467 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1be2019a, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@29d80d2b) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.468 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)]) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.468 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.468 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.468 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
22:11:41.468 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.469 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=5) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=5) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.470 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=6) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=6) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.470 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=7) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=7) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=8) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=8) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.471 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=9) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=9) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=10) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=10) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.472 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=11) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=11) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=12) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=12) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=13) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=13) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=14) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=14) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=15) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=15) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.473 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=16) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=16) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=17) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=17) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=18) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=18) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.474 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=19) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=19) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=20) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=20) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.475 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.475 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)]) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Мясо) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Мясо) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Масло) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Масло) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.476 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Рис) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Рис) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Макароны) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Макароны) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.477 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сок) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сок) - start
22:11:41.477 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Помидоры) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Помидоры) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Огурцы) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Огурцы) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.478 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Яблоки) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Яблоки) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Лук) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Лук) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Пельмени) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Пельмени) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.479 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.480 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.480 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown)]) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.480 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.480 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.480 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Хлеб) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Хлеб) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.480 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сыр) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сыр) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Йогурт) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Йогурт) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.481 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.481 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сосиски) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сосиски) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Рыба) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Рыба) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Яйца) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Яйца) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.482 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Перец) - start
22:11:41.482 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Перец) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Бананы) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Бананы) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@58e1d9d) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Молоко) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Молоко) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.484 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.484 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.484 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
22:11:41.484 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[foodstuffs, productdetails, expiredproducts], _tableMap={PRODUCTDETAILS=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], FOODSTUFFS=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], EXPIREDPRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]}, _caseSensitiveTableNames=false]
22:11:41.484 [main] DEBUG org.dbunit.AbstractDatabaseTester - setDataSet(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.484 [main] DEBUG org.dbunit.AbstractDatabaseTester - onSetup() - start
22:11:41.484 [main] DEBUG org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.CompositeOperation[_actions=[org.dbunit.operation.DeleteAllOperation@1356d4d4, org.dbunit.operation.InsertOperation[_reverseRowOrder=false, super=org.dbunit.operation.InsertOperation@c03cf28]]]) - start
22:11:41.484 [main] DEBUG org.dbunit.AbstractDatabaseTester - OperationListener is null and will be defaulted.
22:11:41.484 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
22:11:41.484 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:postgresql://localhost:5432/TestLab2Expected) - start
22:11:41.538 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=public (dbIdentifierQuoteString=")
22:11:41.538 [main] DEBUG org.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:41.538 [main] DEBUG org.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
22:11:41.542 [main] DEBUG org.dbunit.DefaultOperationListener - connectionCreated(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=null]) - start
22:11:41.542 [main] DEBUG org.dbunit.AbstractDatabaseTester - getDataSet() - start
22:11:41.542 [main] DEBUG org.dbunit.operation.CompositeOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=null], , dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.542 [main] DEBUG org.dbunit.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.542 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.542 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.542 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.542 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.542 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.542 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:41.542 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.542 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=expiredproducts) - start
22:11:41.542 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.542 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
22:11:41.549 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:41.549 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.postgresql.jdbc.PgResultSet@28cda624
22:11:41.549 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}]) - start
22:11:41.549 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.549 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=expiredproducts, escapePattern=null) - start
22:11:41.549 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=null) - start
22:11:41.549 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.549 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.549 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:41.549 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:41.549 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}]) - start
22:11:41.550 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.550 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=foodstuffs, escapePattern=null) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=null) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:41.550 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}]) - start
22:11:41.550 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:41.550 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=productdetails, escapePattern=null) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=null) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.550 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.550 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=expiredproducts (dbIdentifierQuoteString=")
22:11:41.550 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'expiredproducts' exists in schema 'public' ...
22:11:41.553 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@1500b2f3) - start
22:11:41.553 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=expiredproducts, object=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]) - start
22:11:41.573 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.573 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.573 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.573 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.573 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=expiredproducts, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.573 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.573 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=expiredproducts, escapePattern=null) - start
22:11:41.573 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.expiredproducts) - start
22:11:41.573 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.expiredproducts
22:11:41.573 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=productdetails) - start
22:11:41.573 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.573 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.573 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.573 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.573 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.573 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=productdetails (dbIdentifierQuoteString=")
22:11:41.573 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'productdetails' exists in schema 'public' ...
22:11:41.579 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@7eecb5b8) - start
22:11:41.579 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=productdetails, object=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]) - start
22:11:41.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.593 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=productdetails, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.593 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.593 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=productdetails, escapePattern=null) - start
22:11:41.593 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.productdetails) - start
22:11:41.593 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.productdetails
22:11:41.593 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=foodstuffs) - start
22:11:41.593 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.593 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.593 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=foodstuffs (dbIdentifierQuoteString=")
22:11:41.594 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'foodstuffs' exists in schema 'public' ...
22:11:41.596 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@126253fd) - start
22:11:41.596 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=foodstuffs, object=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]) - start
22:11:41.609 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.609 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.610 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.610 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.610 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=foodstuffs, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.610 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.610 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=foodstuffs, escapePattern=null) - start
22:11:41.610 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.foodstuffs) - start
22:11:41.610 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.foodstuffs
22:11:41.610 [main] DEBUG org.dbunit.database.statement.SimpleStatement - executeBatch() - start
22:11:41.610 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.expiredproducts
22:11:41.611 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.productdetails
22:11:41.611 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.foodstuffs
22:11:41.616 [main] DEBUG org.dbunit.database.statement.SimpleStatement - clearBatch() - start
22:11:41.617 [main] DEBUG org.dbunit.database.statement.AbstractBatchStatement - close() - start
22:11:41.617 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.617 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.617 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.617 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.617 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.617 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=foodstuffs) - start
22:11:41.617 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.617 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.618 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.618 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.618 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.618 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.618 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.618 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.618 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.618 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.618 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.618 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=0) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchasePrice) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=markup) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=shelfLife) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.618 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.618 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=foodstuffs, columns=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], keys=[], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=foodstuffs, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=foodstuffs, escapePattern=null) - start
22:11:41.619 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=id, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
22:11:41.619 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=name, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.619 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=purchaseprice, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=purchaseprice, escapePattern=null) - start
22:11:41.619 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=amount, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=amount, escapePattern=null) - start
22:11:41.619 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=markup, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=markup, escapePattern=null) - start
22:11:41.619 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=shelflife, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.619 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=shelflife, escapePattern=null) - start
22:11:41.619 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (?, ?, ?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.619 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (?, ?, ?, ?, ?, ?)) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Хлеб, dataType=VARCHAR) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Хлеб, dataType=VARCHAR) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Хлеб, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, ?, ?, ?, ?, ?)) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Хлеб) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Хлеб) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3300, dataType=INTEGER) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3300, dataType=INTEGER) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3300, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', ?, ?, ?, ?)) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=100, dataType=INTEGER) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=100, dataType=INTEGER) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=100, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', 3300, ?, ?, ?)) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=markup) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.620 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.620 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', 3300, 100, ?, ?)) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=shelflife) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.621 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-08-20, dataType=DATE) - start
22:11:41.621 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-08-20, dataType=DATE) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-08-20, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', 3300, 100, 3, ?)) - start
22:11:41.621 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-20) - start
22:11:41.621 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.621 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.622 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=1) - start
22:11:41.622 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
22:11:41.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.622 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.622 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.622 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchasePrice) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=markup) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=shelfLife) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.623 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.623 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (1, 'Хлеб', 3300, 100, 3, '2020-08-20 +04')) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.623 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Мясо, dataType=VARCHAR) - start
22:11:41.623 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Мясо, dataType=VARCHAR) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Мясо, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Хлеб', 3300, 100, 3, '2020-08-20 +04')) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Мясо) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Мясо) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.623 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=6000, dataType=INTEGER) - start
22:11:41.623 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=6000, dataType=INTEGER) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=6000, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 3300, 100, 3, '2020-08-20 +04')) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.623 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.623 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.623 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=20, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 6000, 100, 3, '2020-08-20 +04')) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=markup) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.624 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.624 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=10, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 6000, 20, 3, '2020-08-20 +04')) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=shelflife) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.624 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-02, dataType=DATE) - start
22:11:41.624 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-02, dataType=DATE) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-02, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 6000, 20, 10, '2020-08-20 +04')) - start
22:11:41.624 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:41.624 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.624 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.625 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchasePrice) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=markup) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=shelfLife) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.625 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.625 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (2, 'Мясо', 6000, 20, 10, '2020-12-02 +04')) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.625 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сыр, dataType=VARCHAR) - start
22:11:41.625 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сыр, dataType=VARCHAR) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сыр, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Мясо', 6000, 20, 10, '2020-12-02 +04')) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сыр) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сыр) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.625 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=4500, dataType=INTEGER) - start
22:11:41.625 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=4500, dataType=INTEGER) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=4500, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 6000, 20, 10, '2020-12-02 +04')) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
22:11:41.625 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.626 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=30, dataType=INTEGER) - start
22:11:41.626 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=30, dataType=INTEGER) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=30, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 4500, 20, 10, '2020-12-02 +04')) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=markup) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.626 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.626 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=15, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 4500, 30, 10, '2020-12-02 +04')) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=shelflife) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.626 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-11-02, dataType=DATE) - start
22:11:41.626 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-11-02, dataType=DATE) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-11-02, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 4500, 30, 15, '2020-12-02 +04')) - start
22:11:41.626 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-02) - start
22:11:41.626 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.626 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.627 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchasePrice) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=markup) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=shelfLife) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.627 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
22:11:41.627 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (3, 'Сыр', 4500, 30, 15, '2020-11-02 +04')) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.627 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Йогурт, dataType=VARCHAR) - start
22:11:41.627 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Йогурт, dataType=VARCHAR) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Йогурт, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Сыр', 4500, 30, 15, '2020-11-02 +04')) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Йогурт) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Йогурт) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.627 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1500, dataType=INTEGER) - start
22:11:41.627 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1500, dataType=INTEGER) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1500, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 4500, 30, 15, '2020-11-02 +04')) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.627 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=50, dataType=INTEGER) - start
22:11:41.627 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=50, dataType=INTEGER) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=50, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 1500, 30, 15, '2020-11-02 +04')) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=markup) - start
22:11:41.627 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.628 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.628 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 1500, 50, 15, '2020-11-02 +04')) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=shelflife) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.628 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-07-15, dataType=DATE) - start
22:11:41.628 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-07-15, dataType=DATE) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-07-15, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 1500, 50, 2, '2020-11-02 +04')) - start
22:11:41.628 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-07-15) - start
22:11:41.628 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.628 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.629 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchasePrice) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=amount) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=markup) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=shelfLife) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.629 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.629 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (4, 'Йогурт', 1500, 50, 2, '2020-07-15 +04')) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.629 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Масло, dataType=VARCHAR) - start
22:11:41.629 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Масло, dataType=VARCHAR) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Масло, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Йогурт', 1500, 50, 2, '2020-07-15 +04')) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Масло) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Масло) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.629 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9600, dataType=INTEGER) - start
22:11:41.629 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9600, dataType=INTEGER) - start
22:11:41.629 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9600, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 1500, 50, 2, '2020-07-15 +04')) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=amount) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.630 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=120, dataType=INTEGER) - start
22:11:41.630 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=120, dataType=INTEGER) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=120, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 9600, 50, 2, '2020-07-15 +04')) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=markup) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.630 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.630 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 9600, 120, 2, '2020-07-15 +04')) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=shelflife) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.630 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-19, dataType=DATE) - start
22:11:41.630 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-19, dataType=DATE) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-19, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 9600, 120, 5, '2020-07-15 +04')) - start
22:11:41.630 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:41.630 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.630 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.632 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchasePrice) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=amount) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=markup) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=shelfLife) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.632 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=6, dataType=INTEGER) - start
22:11:41.632 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=6, dataType=INTEGER) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=6, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (5, 'Масло', 9600, 120, 5, '2020-12-19 +04'::date)) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.632 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Рис, dataType=VARCHAR) - start
22:11:41.632 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Рис, dataType=VARCHAR) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Рис, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Масло', 9600, 120, 5, '2020-12-19 +04'::date)) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Рис) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Рис) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.632 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.632 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3850, dataType=INTEGER) - start
22:11:41.632 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3850, dataType=INTEGER) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3850, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 9600, 120, 5, '2020-12-19 +04'::date)) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=amount) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.633 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=70, dataType=INTEGER) - start
22:11:41.633 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=70, dataType=INTEGER) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=70, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 3850, 120, 5, '2020-12-19 +04'::date)) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=markup) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.633 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.633 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 3850, 70, 5, '2020-12-19 +04'::date)) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=shelflife) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.633 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-04, dataType=DATE) - start
22:11:41.633 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-04, dataType=DATE) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-04, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 3850, 70, 7, '2020-12-19 +04'::date)) - start
22:11:41.633 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-04) - start
22:11:41.633 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.633 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.634 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=6) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=id) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchasePrice) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=amount) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=markup) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=shelfLife) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=id) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.634 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.634 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (6, 'Рис', 3850, 70, 7, '2020-12-04 +04')) - start
22:11:41.634 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Гречка, dataType=VARCHAR) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Гречка, dataType=VARCHAR) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Гречка, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Рис', 3850, 70, 7, '2020-12-04 +04')) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Гречка) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Гречка) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2100, dataType=INTEGER) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2100, dataType=INTEGER) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2100, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 3850, 70, 7, '2020-12-04 +04')) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=amount) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=35, dataType=INTEGER) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=35, dataType=INTEGER) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=35, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 2100, 70, 7, '2020-12-04 +04')) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=markup) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 2100, 35, 7, '2020-12-04 +04')) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=shelflife) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-11-10, dataType=DATE) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-11-10, dataType=DATE) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-11-10, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 2100, 35, 7, '2020-12-04 +04')) - start
22:11:41.635 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-10) - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.635 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.636 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=7) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=id) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchasePrice) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=amount) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=markup) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.636 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=shelfLife) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=id) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=8, dataType=INTEGER) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=8, dataType=INTEGER) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=8, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (7, 'Гречка', 2100, 35, 7, '2020-11-10 +04')) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Макароны, dataType=VARCHAR) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Макароны, dataType=VARCHAR) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Макароны, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Гречка', 2100, 35, 7, '2020-11-10 +04')) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Макароны) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Макароны) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9000, dataType=INTEGER) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9000, dataType=INTEGER) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9000, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 2100, 35, 7, '2020-11-10 +04')) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=amount) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=200, dataType=INTEGER) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=200, dataType=INTEGER) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=200, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 9000, 35, 7, '2020-11-10 +04')) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=markup) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.637 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.637 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 9000, 200, 7, '2020-11-10 +04')) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=shelflife) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.638 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-25, dataType=DATE) - start
22:11:41.638 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-25, dataType=DATE) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-25, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 9000, 200, 2, '2020-11-10 +04')) - start
22:11:41.638 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-25) - start
22:11:41.638 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.638 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.639 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=id) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchasePrice) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=amount) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=markup) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=shelfLife) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=id) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.639 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9, dataType=INTEGER) - start
22:11:41.639 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9, dataType=INTEGER) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (8, 'Макароны', 9000, 200, 2, '2020-12-25 +04')) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.639 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сосиски, dataType=VARCHAR) - start
22:11:41.639 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сосиски, dataType=VARCHAR) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сосиски, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Макароны', 9000, 200, 2, '2020-12-25 +04')) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сосиски) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сосиски) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.639 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.639 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1800, dataType=INTEGER) - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1800, dataType=INTEGER) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1800, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 9000, 200, 2, '2020-12-25 +04')) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=amount) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=10, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 1800, 200, 2, '2020-12-25 +04')) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=markup) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9, dataType=INTEGER) - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9, dataType=INTEGER) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 1800, 10, 2, '2020-12-25 +04')) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=shelflife) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-10-21, dataType=DATE) - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-10-21, dataType=DATE) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-10-21, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 1800, 10, 9, '2020-12-25 +04')) - start
22:11:41.640 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-21) - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.640 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.642 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=9) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=id) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchasePrice) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=amount) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=markup) - start
22:11:41.642 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=shelfLife) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=id) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.643 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.643 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=10, dataType=INTEGER) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=10, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (9, 'Сосиски', 1800, 10, 9, '2020-10-21 +04')) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.643 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Рыба, dataType=VARCHAR) - start
22:11:41.643 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Рыба, dataType=VARCHAR) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Рыба, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Сосиски', 1800, 10, 9, '2020-10-21 +04')) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Рыба) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Рыба) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.643 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2800, dataType=INTEGER) - start
22:11:41.643 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2800, dataType=INTEGER) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2800, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 1800, 10, 9, '2020-10-21 +04')) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=amount) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.643 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.643 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 2800, 10, 9, '2020-10-21 +04')) - start
22:11:41.643 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=markup) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.644 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.644 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=15, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 2800, 5, 9, '2020-10-21 +04')) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=shelflife) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.644 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-08-16, dataType=DATE) - start
22:11:41.644 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-08-16, dataType=DATE) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-08-16, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 2800, 5, 15, '2020-10-21 +04')) - start
22:11:41.644 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-16) - start
22:11:41.644 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.644 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.646 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=10) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=id) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=purchasePrice) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=amount) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=markup) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=shelfLife) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.646 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=id) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.647 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=11, dataType=INTEGER) - start
22:11:41.647 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=11, dataType=INTEGER) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=11, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (10, 'Рыба', 2800, 5, 15, '2020-08-16 +04')) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.647 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сок, dataType=VARCHAR) - start
22:11:41.647 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сок, dataType=VARCHAR) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сок, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Рыба', 2800, 5, 15, '2020-08-16 +04')) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сок) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сок) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=purchaseprice) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.647 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1005, dataType=INTEGER) - start
22:11:41.647 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1005, dataType=INTEGER) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1005, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 2800, 5, 15, '2020-08-16 +04')) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=amount) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.647 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.647 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=15, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 1005, 5, 15, '2020-08-16 +04')) - start
22:11:41.647 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=markup) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.648 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.648 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 1005, 15, 15, '2020-08-16 +04')) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=shelflife) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.648 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-29, dataType=DATE) - start
22:11:41.648 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-29, dataType=DATE) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-29, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 1005, 15, 7, '2020-08-16 +04')) - start
22:11:41.648 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-29) - start
22:11:41.648 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.648 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.650 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=11) - start
22:11:41.650 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=id) - start
22:11:41.650 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.650 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.650 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.650 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.650 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=name) - start
22:11:41.650 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=purchasePrice) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=amount) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=markup) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=shelfLife) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=id) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.651 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=12, dataType=INTEGER) - start
22:11:41.651 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=12, dataType=INTEGER) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=12, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (11, 'Сок', 1005, 15, 7, '2020-12-29 +04')) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=name) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.651 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Яйца, dataType=VARCHAR) - start
22:11:41.651 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Яйца, dataType=VARCHAR) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Яйца, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Сок', 1005, 15, 7, '2020-12-29 +04')) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Яйца) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Яйца) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=purchaseprice) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.651 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5929, dataType=INTEGER) - start
22:11:41.651 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5929, dataType=INTEGER) - start
22:11:41.651 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5929, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 1005, 15, 7, '2020-12-29 +04')) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=amount) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.652 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=77, dataType=INTEGER) - start
22:11:41.652 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=77, dataType=INTEGER) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=77, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 5929, 15, 7, '2020-12-29 +04')) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=markup) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.652 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.652 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 5929, 77, 7, '2020-12-29 +04')) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=shelflife) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.652 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-09-01, dataType=DATE) - start
22:11:41.652 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-09-01, dataType=DATE) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-09-01, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 5929, 77, 1, '2020-12-29 +04')) - start
22:11:41.652 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-09-01) - start
22:11:41.652 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.652 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.654 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=12) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=id) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=name) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=purchasePrice) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=amount) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=markup) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=shelfLife) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=id) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.654 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=13, dataType=INTEGER) - start
22:11:41.654 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=13, dataType=INTEGER) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=13, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (12, 'Яйца', 5929, 77, 1, '2020-09-01 +04')) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:41.654 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=name) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Помидоры, dataType=VARCHAR) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Помидоры, dataType=VARCHAR) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Помидоры, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Яйца', 5929, 77, 1, '2020-09-01 +04')) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Помидоры) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Помидоры) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=purchaseprice) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=24500, dataType=INTEGER) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=24500, dataType=INTEGER) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=24500, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 5929, 77, 1, '2020-09-01 +04')) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=amount) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=500, dataType=INTEGER) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=500, dataType=INTEGER) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=500, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 24500, 77, 1, '2020-09-01 +04')) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=markup) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2, dataType=INTEGER) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 24500, 500, 1, '2020-09-01 +04')) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=shelflife) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-11, dataType=DATE) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-11, dataType=DATE) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-11, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 24500, 500, 2, '2020-09-01 +04')) - start
22:11:41.655 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-11) - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.655 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.656 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=13) - start
22:11:41.656 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=id) - start
22:11:41.656 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.656 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.656 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.656 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.656 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=name) - start
22:11:41.656 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.656 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=purchasePrice) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=amount) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=markup) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=shelfLife) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=id) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.657 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=14, dataType=INTEGER) - start
22:11:41.657 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=14, dataType=INTEGER) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=14, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (13, 'Помидоры', 24500, 500, 2, '2020-12-11 +04')) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=name) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.657 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Огурцы, dataType=VARCHAR) - start
22:11:41.657 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Огурцы, dataType=VARCHAR) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Огурцы, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Помидоры', 24500, 500, 2, '2020-12-11 +04')) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Огурцы) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Огурцы) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=purchaseprice) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.657 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=46900, dataType=INTEGER) - start
22:11:41.657 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=46900, dataType=INTEGER) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=46900, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 24500, 500, 2, '2020-12-11 +04')) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=amount) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.657 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=700, dataType=INTEGER) - start
22:11:41.657 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=700, dataType=INTEGER) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=700, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 46900, 500, 2, '2020-12-11 +04')) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=markup) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.657 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.658 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.658 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 46900, 700, 2, '2020-12-11 +04')) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=shelflife) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.658 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-11-22, dataType=DATE) - start
22:11:41.658 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-11-22, dataType=DATE) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-11-22, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 46900, 700, 1, '2020-12-11 +04')) - start
22:11:41.658 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-22) - start
22:11:41.658 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.658 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.659 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=14) - start
22:11:41.659 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=id) - start
22:11:41.659 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=name) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=purchasePrice) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=amount) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=markup) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=shelfLife) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=id) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.660 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.660 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=15, dataType=INTEGER) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=15, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (14, 'Огурцы', 46900, 700, 1, '2020-11-22 +04')) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=name) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.660 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Перец, dataType=VARCHAR) - start
22:11:41.660 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Перец, dataType=VARCHAR) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Перец, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Огурцы', 46900, 700, 1, '2020-11-22 +04')) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Перец) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Перец) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=purchaseprice) - start
22:11:41.660 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3400, dataType=INTEGER) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3400, dataType=INTEGER) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3400, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 46900, 700, 1, '2020-11-22 +04')) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=amount) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=100, dataType=INTEGER) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=100, dataType=INTEGER) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=100, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 3400, 700, 1, '2020-11-22 +04')) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=markup) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3, dataType=INTEGER) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 3400, 100, 1, '2020-11-22 +04')) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=shelflife) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-10-16, dataType=DATE) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-10-16, dataType=DATE) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-10-16, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 3400, 100, 3, '2020-11-22 +04')) - start
22:11:41.661 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-16) - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.661 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.662 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=15) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=id) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=name) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=purchasePrice) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=amount) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=markup) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=shelfLife) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=id) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=16, dataType=INTEGER) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=16, dataType=INTEGER) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=16, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (15, 'Перец', 3400, 100, 3, '2020-10-16 +04')) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=name) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Яблоки, dataType=VARCHAR) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Яблоки, dataType=VARCHAR) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Яблоки, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Перец', 3400, 100, 3, '2020-10-16 +04')) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Яблоки) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Яблоки) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=purchaseprice) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=31920, dataType=INTEGER) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=31920, dataType=INTEGER) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=31920, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 3400, 100, 3, '2020-10-16 +04')) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=amount) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=456, dataType=INTEGER) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=456, dataType=INTEGER) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=456, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 31920, 100, 3, '2020-10-16 +04')) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=markup) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=4, dataType=INTEGER) - start
22:11:41.663 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=4, dataType=INTEGER) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=4, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 31920, 456, 3, '2020-10-16 +04')) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=shelflife) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.663 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.664 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-02, dataType=DATE) - start
22:11:41.664 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-02, dataType=DATE) - start
22:11:41.664 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-02, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 31920, 456, 4, '2020-10-16 +04')) - start
22:11:41.664 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:41.664 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.664 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.664 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=16) - start
22:11:41.664 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=id) - start
22:11:41.664 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.664 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.664 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=name) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=purchasePrice) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=amount) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=markup) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=shelfLife) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=id) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.665 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=17, dataType=INTEGER) - start
22:11:41.665 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=17, dataType=INTEGER) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=17, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (16, 'Яблоки', 31920, 456, 4, '2020-12-02 +04')) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=name) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.665 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Бананы, dataType=VARCHAR) - start
22:11:41.665 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Бананы, dataType=VARCHAR) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Бананы, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Яблоки', 31920, 456, 4, '2020-12-02 +04')) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Бананы) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Бананы) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=purchaseprice) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.665 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3894, dataType=INTEGER) - start
22:11:41.665 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3894, dataType=INTEGER) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3894, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 31920, 456, 4, '2020-12-02 +04')) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:41.665 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=amount) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.666 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=66, dataType=INTEGER) - start
22:11:41.666 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=66, dataType=INTEGER) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=66, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 3894, 456, 4, '2020-12-02 +04')) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=markup) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.666 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.666 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=5, dataType=INTEGER) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=5, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 3894, 66, 4, '2020-12-02 +04')) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=shelflife) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.666 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-10-30, dataType=DATE) - start
22:11:41.666 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-10-30, dataType=DATE) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-10-30, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 3894, 66, 5, '2020-12-02 +04')) - start
22:11:41.666 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-30) - start
22:11:41.666 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.666 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.667 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=17) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=id) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=name) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=purchasePrice) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=amount) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=markup) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=shelfLife) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.667 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=id) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=18, dataType=INTEGER) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=18, dataType=INTEGER) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=18, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (17, 'Бананы', 3894, 66, 5, '2020-10-30 +04')) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=name) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Лук, dataType=VARCHAR) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Лук, dataType=VARCHAR) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Лук, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Бананы', 3894, 66, 5, '2020-10-30 +04')) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Лук) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Лук) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=purchaseprice) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1400, dataType=INTEGER) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1400, dataType=INTEGER) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1400, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 3894, 66, 5, '2020-10-30 +04')) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=amount) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=200, dataType=INTEGER) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=200, dataType=INTEGER) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=200, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 1400, 66, 5, '2020-10-30 +04')) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=markup) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1, dataType=INTEGER) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 1400, 200, 5, '2020-10-30 +04')) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=shelflife) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-19, dataType=DATE) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-19, dataType=DATE) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-19, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 1400, 200, 1, '2020-10-30 +04')) - start
22:11:41.668 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.668 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.669 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=18) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=id) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=name) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=purchasePrice) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=amount) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.669 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=markup) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=shelfLife) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=id) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=19, dataType=INTEGER) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=19, dataType=INTEGER) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=19, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (18, 'Лук', 1400, 200, 1, '2020-12-19 +04')) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=name) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Молоко, dataType=VARCHAR) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Молоко, dataType=VARCHAR) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Молоко, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Лук', 1400, 200, 1, '2020-12-19 +04')) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Молоко) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Молоко) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=purchaseprice) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=864, dataType=INTEGER) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=864, dataType=INTEGER) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=864, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 1400, 200, 1, '2020-12-19 +04')) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=amount) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=16, dataType=INTEGER) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=16, dataType=INTEGER) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=16, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 864, 200, 1, '2020-12-19 +04')) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=markup) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=20, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 864, 16, 1, '2020-12-19 +04')) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=shelflife) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.670 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.670 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-10-15, dataType=DATE) - start
22:11:41.671 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-10-15, dataType=DATE) - start
22:11:41.671 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-10-15, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 864, 16, 20, '2020-12-19 +04')) - start
22:11:41.671 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-15) - start
22:11:41.671 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.671 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.671 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=19) - start
22:11:41.671 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=id) - start
22:11:41.671 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.671 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.671 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.671 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=name) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=purchasePrice) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=amount) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=markup) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=shelfLife) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=id) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:41.672 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.672 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=20, dataType=INTEGER) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=20, column=1, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (19, 'Молоко', 864, 16, 20, '2020-10-15 +04')) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=name) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.672 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Пельмени, dataType=VARCHAR) - start
22:11:41.672 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Пельмени, dataType=VARCHAR) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Пельмени, column=2, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Молоко', 864, 16, 20, '2020-10-15 +04')) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Пельмени) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Пельмени) - start
22:11:41.672 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=purchaseprice) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=19500, dataType=INTEGER) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=19500, dataType=INTEGER) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=19500, column=3, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Пельмени', 864, 16, 20, '2020-10-15 +04')) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=amount) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=78, dataType=INTEGER) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=78, dataType=INTEGER) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=78, column=4, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Пельмени', 19500, 16, 20, '2020-10-15 +04')) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=markup) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=8, dataType=INTEGER) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=8, dataType=INTEGER) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=8, column=5, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Пельмени', 19500, 78, 20, '2020-10-15 +04')) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=shelflife) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=2020-12-30, dataType=DATE) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=2020-12-30, dataType=DATE) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2020-12-30, column=6, statement=insert into public.foodstuffs (id, name, purchaseprice, amount, markup, shelflife) values (20, 'Пельмени', 19500, 78, 8, '2020-10-15 +04')) - start
22:11:41.673 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-30) - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.673 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.674 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], row=20) - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=20, column=id) - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=20) - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=20, rowCount=20) - start
22:11:41.675 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
22:11:41.675 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
22:11:41.675 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.675 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
22:11:41.675 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.675 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
22:11:41.675 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.675 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]) - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.675 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.675 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.676 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.676 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=productdetails) - start
22:11:41.676 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.676 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.676 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.676 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.676 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.676 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.676 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.676 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.676 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=0) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=priceforoneitem) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=profit) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.676 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.676 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=productdetails, columns=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], keys=[], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.676 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=productdetails, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.676 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.676 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=productdetails, escapePattern=null) - start
22:11:41.676 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=name, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.677 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.677 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.677 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=priceforoneitem, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.677 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.677 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=priceforoneitem, escapePattern=null) - start
22:11:41.677 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=purchaseprice, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.677 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.677 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=purchaseprice, escapePattern=null) - start
22:11:41.677 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=profit, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.677 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.677 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=profit, escapePattern=null) - start
22:11:41.677 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values (?, ?, ?, ?), connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.677 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.677 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Мясо, dataType=VARCHAR) - start
22:11:41.677 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Мясо, dataType=VARCHAR) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Мясо, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values (?, ?, ?, ?)) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Мясо) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Мясо) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=priceforoneitem) - start
22:11:41.677 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.678 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=300, dataType=INTEGER) - start
22:11:41.678 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=300, dataType=INTEGER) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=300, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Мясо', ?, ?, ?)) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.678 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=6000, dataType=INTEGER) - start
22:11:41.678 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=6000, dataType=INTEGER) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=6000, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Мясо', 300, ?, ?)) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=profit) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.678 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=520, dataType=INTEGER) - start
22:11:41.678 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=520, dataType=INTEGER) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=520, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Мясо', 300, 6000, ?)) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:41.678 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:41.678 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.678 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.680 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=1) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=priceforoneitem) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=profit) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.680 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Масло, dataType=VARCHAR) - start
22:11:41.680 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Масло, dataType=VARCHAR) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Масло, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Мясо', 300, 6000, 520)) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Масло) - start
22:11:41.680 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Масло) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=priceforoneitem) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.681 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=80, dataType=INTEGER) - start
22:11:41.681 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=80, dataType=INTEGER) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=80, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Масло', 300, 6000, 520)) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.681 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9600, dataType=INTEGER) - start
22:11:41.681 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9600, dataType=INTEGER) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9600, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Масло', 80, 6000, 520)) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=profit) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.681 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=415, dataType=INTEGER) - start
22:11:41.681 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=415, dataType=INTEGER) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=415, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Масло', 80, 9600, 520)) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:41.681 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:41.681 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.681 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.683 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=2) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=priceforoneitem) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=profit) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.683 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Рис, dataType=VARCHAR) - start
22:11:41.683 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Рис, dataType=VARCHAR) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Рис, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Масло', 80, 9600, 415)) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Рис) - start
22:11:41.683 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Рис) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=priceforoneitem) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.684 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=55, dataType=INTEGER) - start
22:11:41.684 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=55, dataType=INTEGER) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=55, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Рис', 80, 9600, 415)) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.684 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.684 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=3850, dataType=INTEGER) - start
22:11:41.684 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=3850, dataType=INTEGER) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=3850, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Рис', 55, 9600, 415)) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=profit) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.693 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=231, dataType=INTEGER) - start
22:11:41.693 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=231, dataType=INTEGER) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=231, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Рис', 55, 3850, 415)) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:41.693 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:41.693 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.693 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.694 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=3) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=priceforoneitem) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.694 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:41.709 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.709 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.709 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.709 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.709 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=profit) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.710 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Макароны, dataType=VARCHAR) - start
22:11:41.710 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Макароны, dataType=VARCHAR) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Макароны, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Рис', 55, 3850, 231)) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Макароны) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Макароны) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=priceforoneitem) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.710 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=45, dataType=INTEGER) - start
22:11:41.710 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=45, dataType=INTEGER) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=45, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Макароны', 55, 3850, 231)) - start
22:11:41.710 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:41.726 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.727 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=9000, dataType=INTEGER) - start
22:11:41.727 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=9000, dataType=INTEGER) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=9000, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Макароны', 45, 3850, 231)) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=profit) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.727 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=156, dataType=INTEGER) - start
22:11:41.727 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=156, dataType=INTEGER) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=156, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Макароны', 45, 9000, 231)) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:41.727 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:41.727 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.727 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.728 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=4) - start
22:11:41.728 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.728 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.728 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=priceforoneitem) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=profit) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.746 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сок, dataType=VARCHAR) - start
22:11:41.746 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сок, dataType=VARCHAR) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сок, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Макароны', 45, 9000, 156)) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сок) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сок) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=priceforoneitem) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.746 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.762 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=67, dataType=INTEGER) - start
22:11:41.762 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=67, dataType=INTEGER) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=67, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Сок', 45, 9000, 156)) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.762 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1005, dataType=INTEGER) - start
22:11:41.762 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1005, dataType=INTEGER) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1005, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Сок', 67, 9000, 156)) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=profit) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.762 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=56, dataType=INTEGER) - start
22:11:41.762 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=56, dataType=INTEGER) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=56, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Сок', 67, 1005, 156)) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:41.762 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:41.762 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.762 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.783 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=5) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=priceforoneitem) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=profit) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.784 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Помидоры, dataType=VARCHAR) - start
22:11:41.784 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Помидоры, dataType=VARCHAR) - start
22:11:41.784 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Помидоры, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Сок', 67, 1005, 56)) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Помидоры) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Помидоры) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=priceforoneitem) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.800 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=49, dataType=INTEGER) - start
22:11:41.800 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=49, dataType=INTEGER) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=49, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Помидоры', 67, 1005, 56)) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.800 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.800 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=24500, dataType=INTEGER) - start
22:11:41.801 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=24500, dataType=INTEGER) - start
22:11:41.801 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=24500, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Помидоры', 49, 1005, 56)) - start
22:11:41.801 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.801 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:41.801 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=profit) - start
22:11:41.801 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:41.801 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:41.801 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.801 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.801 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=426, dataType=INTEGER) - start
22:11:41.801 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=426, dataType=INTEGER) - start
22:11:41.819 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=426, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Помидоры', 49, 24500, 56)) - start
22:11:41.819 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:41.819 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:41.819 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.819 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.821 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=6) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=priceforoneitem) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=profit) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.821 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.834 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Огурцы, dataType=VARCHAR) - start
22:11:41.834 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Огурцы, dataType=VARCHAR) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Огурцы, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Помидоры', 49, 24500, 426)) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Огурцы) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Огурцы) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=priceforoneitem) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.834 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=67, dataType=INTEGER) - start
22:11:41.834 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=67, dataType=INTEGER) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=67, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Огурцы', 49, 24500, 426)) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.834 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.835 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.835 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=46900, dataType=INTEGER) - start
22:11:41.835 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=46900, dataType=INTEGER) - start
22:11:41.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=46900, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Огурцы', 67, 24500, 426)) - start
22:11:41.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:41.848 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=profit) - start
22:11:41.848 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:41.848 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:41.848 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.848 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.848 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=408, dataType=INTEGER) - start
22:11:41.848 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=408, dataType=INTEGER) - start
22:11:41.848 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=408, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Огурцы', 67, 46900, 426)) - start
22:11:41.848 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:41.848 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:41.848 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.848 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.849 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=7) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=priceforoneitem) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.849 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=profit) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.861 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Яблоки, dataType=VARCHAR) - start
22:11:41.861 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Яблоки, dataType=VARCHAR) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Яблоки, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Огурцы', 67, 46900, 408)) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Яблоки) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Яблоки) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=priceforoneitem) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.861 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=70, dataType=INTEGER) - start
22:11:41.861 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=70, dataType=INTEGER) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=70, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Яблоки', 67, 46900, 408)) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.861 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.872 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=31920, dataType=INTEGER) - start
22:11:41.872 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=31920, dataType=INTEGER) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=31920, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Яблоки', 70, 46900, 408)) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=profit) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.872 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.872 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1108, dataType=INTEGER) - start
22:11:41.872 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1108, dataType=INTEGER) - start
22:11:41.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1108, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Яблоки', 70, 31920, 408)) - start
22:11:41.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:41.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:41.873 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.873 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.874 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=8) - start
22:11:41.874 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.874 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.874 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.874 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.874 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.874 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=priceforoneitem) - start
22:11:41.874 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.874 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=profit) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.885 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Лук, dataType=VARCHAR) - start
22:11:41.885 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Лук, dataType=VARCHAR) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Лук, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Яблоки', 70, 31920, 1108)) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Лук) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Лук) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=priceforoneitem) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.885 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.885 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=7, dataType=INTEGER) - start
22:11:41.885 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=7, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Лук', 70, 31920, 1108)) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.899 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1400, dataType=INTEGER) - start
22:11:41.899 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1400, dataType=INTEGER) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1400, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Лук', 7, 31920, 1108)) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=profit) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:41.899 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.900 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.900 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=12, dataType=INTEGER) - start
22:11:41.900 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=12, dataType=INTEGER) - start
22:11:41.900 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=12, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Лук', 7, 1400, 1108)) - start
22:11:41.900 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.900 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:41.900 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.900 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.901 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=9) - start
22:11:41.901 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.901 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.922 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.922 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.922 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.922 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=priceforoneitem) - start
22:11:41.922 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.922 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.922 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=profit) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.923 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Пельмени, dataType=VARCHAR) - start
22:11:41.923 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Пельмени, dataType=VARCHAR) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Пельмени, column=1, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Лук', 7, 1400, 12)) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Пельмени) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Пельмени) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=priceforoneitem) - start
22:11:41.923 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:41.936 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=250, dataType=INTEGER) - start
22:11:41.936 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=250, dataType=INTEGER) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=250, column=2, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Пельмени', 7, 1400, 12)) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.936 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:41.937 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=19500, dataType=INTEGER) - start
22:11:41.937 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=19500, dataType=INTEGER) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=19500, column=3, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Пельмени', 250, 1400, 12)) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=profit) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:41.937 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=1352, dataType=INTEGER) - start
22:11:41.937 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=1352, dataType=INTEGER) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1352, column=4, statement=insert into public.productdetails (name, priceforoneitem, purchaseprice, profit) values ('Пельмени', 250, 19500, 12)) - start
22:11:41.937 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:41.952 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:41.952 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.952 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.954 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], row=10) - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=10) - start
22:11:41.954 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
22:11:41.954 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
22:11:41.954 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.954 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
22:11:41.954 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:41.954 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
22:11:41.954 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:41.954 [main] DEBUG org.dbunit.operation.AbstractBatchOperation - isEmpty(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]) - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.954 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.954 [main] DEBUG org.dbunit.operation.AbstractOperation - getOperationMetaData(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]], metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:41.967 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:41.967 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=expiredproducts) - start
22:11:41.967 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:41.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:41.967 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:41.967 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.967 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.967 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:41.967 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:41.967 [main] DEBUG org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=0) - start
22:11:41.967 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.967 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.967 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:41.967 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.967 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.967 [main] DEBUG org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=expiredproducts, columns=[(name, VARCHAR, nullable)], keys=[], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.967 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=expiredproducts, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.981 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.981 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=expiredproducts, escapePattern=null) - start
22:11:41.981 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=name, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.981 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:41.981 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:41.981 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createPreparedBatchStatement(sql=insert into public.expiredproducts (name) values (?), connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.981 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:41.991 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:41.991 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:41.991 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:41.991 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.991 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.991 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Хлеб, dataType=VARCHAR) - start
22:11:41.992 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Хлеб, dataType=VARCHAR) - start
22:11:41.992 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Хлеб, column=1, statement=insert into public.expiredproducts (name) values (?)) - start
22:11:41.992 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Хлеб) - start
22:11:41.992 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Хлеб) - start
22:11:41.992 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.992 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.994 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=1) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=9) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=9) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.994 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сыр, dataType=VARCHAR) - start
22:11:41.994 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сыр, dataType=VARCHAR) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сыр, column=1, statement=insert into public.expiredproducts (name) values ('Хлеб')) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сыр) - start
22:11:41.994 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сыр) - start
22:11:41.994 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.995 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.995 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=2) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=9) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=9) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.996 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Йогурт, dataType=VARCHAR) - start
22:11:41.996 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Йогурт, dataType=VARCHAR) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Йогурт, column=1, statement=insert into public.expiredproducts (name) values ('Сыр')) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Йогурт) - start
22:11:41.996 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Йогурт) - start
22:11:41.996 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:41.996 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:41.997 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=3) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=9) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=9) - start
22:11:41.997 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.007 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.008 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Сосиски, dataType=VARCHAR) - start
22:11:42.008 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Сосиски, dataType=VARCHAR) - start
22:11:42.008 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Сосиски, column=1, statement=insert into public.expiredproducts (name) values ('Йогурт')) - start
22:11:42.008 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Сосиски) - start
22:11:42.008 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Сосиски) - start
22:11:42.008 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:42.008 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:42.009 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=4) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=9) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=9) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.010 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Рыба, dataType=VARCHAR) - start
22:11:42.010 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Рыба, dataType=VARCHAR) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Рыба, column=1, statement=insert into public.expiredproducts (name) values ('Сосиски')) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Рыба) - start
22:11:42.010 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Рыба) - start
22:11:42.010 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:42.010 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:42.010 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=5) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=9) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=9) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.021 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.021 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Яйца, dataType=VARCHAR) - start
22:11:42.021 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Яйца, dataType=VARCHAR) - start
22:11:42.022 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Яйца, column=1, statement=insert into public.expiredproducts (name) values ('Рыба')) - start
22:11:42.022 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Яйца) - start
22:11:42.022 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Яйца) - start
22:11:42.022 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:42.022 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:42.022 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=6) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=9) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=9) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.023 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.023 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Перец, dataType=VARCHAR) - start
22:11:42.023 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Перец, dataType=VARCHAR) - start
22:11:42.035 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Перец, column=1, statement=insert into public.expiredproducts (name) values ('Яйца')) - start
22:11:42.035 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Перец) - start
22:11:42.035 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Перец) - start
22:11:42.035 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:42.035 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:42.036 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=7) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=9) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=9) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.036 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Бананы, dataType=VARCHAR) - start
22:11:42.036 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Бананы, dataType=VARCHAR) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Бананы, column=1, statement=insert into public.expiredproducts (name) values ('Перец')) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Бананы) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Бананы) - start
22:11:42.036 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:42.036 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:42.036 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=8) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=9) - start
22:11:42.036 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=9) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.049 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addValue(value=Молоко, dataType=VARCHAR) - start
22:11:42.049 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addValue(value=Молоко, dataType=VARCHAR) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=Молоко, column=1, statement=insert into public.expiredproducts (name) values ('Бананы')) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.datatype.DataType - asString(value=Молоко) - start
22:11:42.049 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - typeCast(value=Молоко) - start
22:11:42.049 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - addBatch() - start
22:11:42.049 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - addBatch() - start
22:11:42.050 [main] DEBUG org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], row=9) - start
22:11:42.050 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:42.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:42.050 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=9) - start
22:11:42.050 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - executeBatch() - start
22:11:42.050 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - executeBatch() - start
22:11:42.050 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:42.050 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - clearBatch() - start
22:11:42.050 [main] DEBUG org.dbunit.database.statement.SimplePreparedStatement - clearBatch() - start
22:11:42.050 [main] DEBUG org.dbunit.database.statement.AutomaticPreparedBatchStatement - close() - start
22:11:42.050 [main] DEBUG org.dbunit.database.statement.AbstractPreparedBatchStatement - close() - start
22:11:42.050 [main] DEBUG org.dbunit.DefaultOperationListener - operationSetUpFinished(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:42.064 [main] DEBUG org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@69504ae9, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@387a8303}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:42.064 [main] DEBUG org.dbunit.database.DatabaseConnection - close() - start
22:11:42.122 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
22:11:42.123 [main] DEBUG org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
22:11:42.123 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
22:11:42.123 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
22:11:42.124 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@5c7bfdc1, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@5276d6ee) - start
22:11:42.124 [main] DEBUG org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@5c7bfdc1, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@5276d6ee) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.CachedDataSet - startDataSet() - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.125 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)]) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.125 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.125 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.125 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=1) - start
22:11:42.125 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=1) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.126 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.126 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=2) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=2) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=3) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=3) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.127 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=4) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=4) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.127 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.129 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.130 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.130 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=5) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=5) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.130 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.141 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.141 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.141 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.141 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=6) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=6) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.141 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.142 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.153 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.153 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.153 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.153 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.154 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=7) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=7) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.154 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.154 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.167 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.167 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=8) - start
22:11:42.167 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=8) - start
22:11:42.167 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.168 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.168 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=9) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=9) - start
22:11:42.168 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.180 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.180 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=10) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=10) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.180 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.196 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.197 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.197 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=11) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=11) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.197 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.210 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=12) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=12) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.210 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.221 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=13) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=13) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.221 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.234 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=14) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=14) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.235 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.235 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=15) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=15) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.235 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.250 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.250 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.251 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=16) - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=16) - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.251 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.251 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.264 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=17) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=17) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.264 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.276 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=18) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=18) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.276 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.288 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=19) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=19) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=foodstuffs, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=foodstuffs) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.288 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=20) - start
22:11:42.288 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=20) - start
22:11:42.289 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=foodstuffs) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.302 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.302 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)]) - start
22:11:42.302 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:42.314 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.314 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.314 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:42.314 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:42.314 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:42.314 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.314 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.314 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.314 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.314 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.315 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Мясо) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Мясо) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.315 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.326 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Масло) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Масло) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.326 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.334 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Рис) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Рис) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.334 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.335 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.335 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.335 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Макароны) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Макароны) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.335 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.345 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.345 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.345 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.345 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.346 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.346 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сок) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сок) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.346 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.362 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.362 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Помидоры) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Помидоры) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.362 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.362 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.378 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.379 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Огурцы) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Огурцы) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.379 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.379 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.399 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Яблоки) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Яблоки) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.399 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.399 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Лук) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Лук) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=productdetails, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.399 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.435 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=productdetails) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.436 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.436 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Пельмени) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Пельмени) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=productdetails) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.436 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.450 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]) - start
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.450 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.450 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.450 [main] DEBUG org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(name, UNKNOWN, nullableUnknown)]) - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.451 [main] DEBUG org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.451 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.451 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.461 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Хлеб) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Хлеб) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.461 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.461 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сыр) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сыр) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.461 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.462 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.462 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.472 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Йогурт) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Йогурт) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.472 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.472 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.483 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Сосиски) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Сосиски) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.483 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.483 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Рыба) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Рыба) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.483 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.494 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.494 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Яйца) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Яйца) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.494 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.495 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.507 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.507 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Перец) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Перец) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.507 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.507 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Бананы) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Бананы) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=expiredproducts, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@71687585) - start
22:11:42.507 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.521 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.521 [main] DEBUG org.dbunit.dataset.CachedDataSet - row(values=Молоко) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.DefaultTable - addRow(values=Молоко) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.521 [main] DEBUG org.dbunit.dataset.CachedDataSet - endTable() - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.521 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.535 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.535 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - start
22:11:42.535 [main] DEBUG org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[foodstuffs, productdetails, expiredproducts], _tableMap={PRODUCTDETAILS=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], FOODSTUFFS=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], EXPIREDPRODUCTS=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]}, _caseSensitiveTableNames=false]
22:11:42.536 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
22:11:42.536 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:postgresql://localhost:5432/TestLab2Expected) - start
22:11:42.579 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=public (dbIdentifierQuoteString=")
22:11:42.580 [main] DEBUG org.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:42.580 [main] DEBUG org.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
22:11:42.583 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:42.583 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals(expectedDataSet=AbstractDataSet[_orderedTableNameMap=null], actualDataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:42.583 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals(expectedDataSet=AbstractDataSet[_orderedTableNameMap=null], actualDataSet=AbstractDataSet[_orderedTableNameMap=null], failureHandler=null) - start
22:11:42.583 [main] DEBUG org.dbunit.assertion.DbUnitAssert - FailureHandler is null. Using default implementation
22:11:42.583 [main] DEBUG org.dbunit.assertion.DbUnitAssert - getSortedUpperTableNames(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTableNames() - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.583 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.583 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:42.583 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.583 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.583 [main] DEBUG org.dbunit.assertion.DbUnitAssert - getSortedUpperTableNames(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:42.583 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:42.583 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
22:11:42.587 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:42.587 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.postgresql.jdbc.PgResultSet@6933b6c6
22:11:42.587 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7d3e8655}]) - start
22:11:42.587 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:42.587 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=expiredproducts, escapePattern=null) - start
22:11:42.587 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=null) - start
22:11:42.587 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:42.587 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:42.587 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.587 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.587 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7d3e8655}]) - start
22:11:42.588 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:42.588 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=foodstuffs, escapePattern=null) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=null) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.588 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7d3e8655}]) - start
22:11:42.588 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:42.588 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=productdetails, escapePattern=null) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=null) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:42.588 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=EXPIREDPRODUCTS) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.588 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=EXPIREDPRODUCTS) - start
22:11:42.588 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:42.588 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=EXPIREDPRODUCTS) - start
22:11:42.588 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.588 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.588 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=EXPIREDPRODUCTS (dbIdentifierQuoteString=")
22:11:42.588 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=EXPIREDPRODUCTS newValue=expiredproducts
22:11:42.588 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'expiredproducts' exists in schema 'public' ...
22:11:42.590 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@7dfb0c0f) - start
22:11:42.590 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=EXPIREDPRODUCTS, object=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]) - start
22:11:42.599 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.599 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.599 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:42.599 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:42.599 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
22:11:42.599 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=public, metaData=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[], escapePattern=null) - start
22:11:42.599 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.599 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:42.599 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.599 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:42.599 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.599 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=expiredproducts, escapePattern=null) - start
22:11:42.599 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select name from public.expiredproducts
22:11:42.600 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]], _resultSet=[org.postgresql.jdbc.PgResultSet@626abbd0], _statement=[org.postgresql.jdbc.PgStatement@169bb4dd]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.600 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.600 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.600 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.600 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.600 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.600 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.600 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.600 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.601 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.601 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=name) - start
22:11:42.601 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.601 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.601 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.601 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@626abbd0) - start
22:11:42.601 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=name) - start
22:11:42.601 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9]
22:11:42.601 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[], _rowList.size()=9]
22:11:42.601 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
22:11:42.601 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:42.601 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]) - start
22:11:42.601 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.601 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.601 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], columnsToSearch=[(name, VARCHAR, nullable)])
22:11:42.601 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.601 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[], columnsToSearch=[(name, UNKNOWN, nullableUnknown)])
22:11:42.601 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.601 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=expiredproducts, expectedColumn=(name, UNKNOWN, nullableUnknown), actualColumn=(name, VARCHAR, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.601 [main] DEBUG org.dbunit.assertion.DbUnitAssert - compareData(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=expiredproducts, columns=[(name, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=9], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[], _rowList.size()=9], comparisonCols=[org.dbunit.assertion.DbUnitAssert$ComparisonColumn@d23e042], failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.601 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=9) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Хлеб, o2=Хлеб) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:42.613 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=9) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=9) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сыр, o2=Сыр) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=9) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=9) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Йогурт, o2=Йогурт) - start
22:11:42.614 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:42.621 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=9) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=9) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сосиски, o2=Сосиски) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=9) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=9) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Рыба, o2=Рыба) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=9) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=9) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Яйца, o2=Яйца) - start
22:11:42.622 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=9) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=9) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Перец, o2=Перец) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=9) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=9) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Бананы, o2=Бананы) - start
22:11:42.634 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=9) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=9) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.635 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Молоко, o2=Молоко) - start
22:11:42.647 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=FOODSTUFFS) - start
22:11:42.647 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:42.647 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
22:11:42.647 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.647 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.647 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=FOODSTUFFS) - start
22:11:42.647 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:42.647 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=FOODSTUFFS) - start
22:11:42.647 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:42.647 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.647 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.647 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.647 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.647 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=FOODSTUFFS (dbIdentifierQuoteString=")
22:11:42.647 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=FOODSTUFFS newValue=foodstuffs
22:11:42.647 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'foodstuffs' exists in schema 'public' ...
22:11:42.649 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@46d59067) - start
22:11:42.649 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=FOODSTUFFS, object=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]) - start
22:11:42.655 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.655 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.655 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:42.655 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:42.656 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
22:11:42.656 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=public, metaData=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[], escapePattern=null) - start
22:11:42.656 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.656 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:42.656 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=id, escapePattern=null) - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=purchaseprice, escapePattern=null) - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=amount, escapePattern=null) - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=markup, escapePattern=null) - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=shelflife, escapePattern=null) - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:42.661 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=foodstuffs, escapePattern=null) - start
22:11:42.661 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select id, name, purchaseprice, amount, markup, shelflife from public.foodstuffs
22:11:42.662 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]], _resultSet=[org.postgresql.jdbc.PgResultSet@2d0399f4], _statement=[org.postgresql.jdbc.PgStatement@14dd7b39]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
22:11:42.662 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.662 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=id) - start
22:11:42.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.662 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.662 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.662 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.663 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=name) - start
22:11:42.663 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.663 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.663 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.663 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.673 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=purchaseprice) - start
22:11:42.673 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.674 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.674 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=amount) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.674 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.674 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=markup) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.674 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.674 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=shelflife) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.674 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.674 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=id) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.674 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.674 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=name) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.674 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.674 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.684 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=purchaseprice) - start
22:11:42.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.685 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.685 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=amount) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.685 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.685 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=markup) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.685 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.685 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=shelflife) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.685 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.685 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=id) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.685 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.685 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=name) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.685 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.685 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.697 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=purchaseprice) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.697 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.697 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=amount) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.697 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.697 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=markup) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.697 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.697 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=shelflife) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.697 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.697 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=id) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.697 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.697 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.697 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=name) - start
22:11:42.698 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.698 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.698 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.698 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.715 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=purchaseprice) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.715 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.715 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=amount) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.715 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.715 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=markup) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.715 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.715 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=shelflife) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.715 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.715 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=id) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.715 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.715 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=name) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.715 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.715 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.749 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=purchaseprice) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.749 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.749 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=amount) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.749 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.749 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=markup) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.749 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.749 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=shelflife) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.749 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.749 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=id) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.749 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.749 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=name) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.749 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.749 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.760 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=purchaseprice) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.760 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.760 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=amount) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.760 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.760 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=markup) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.760 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.760 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=shelflife) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.760 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.760 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=id) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.760 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.760 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=name) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.760 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.760 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.771 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=purchaseprice) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.771 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.771 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=amount) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.771 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.771 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=markup) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.771 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.771 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=shelflife) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.771 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.771 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=id) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.771 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.771 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=name) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.771 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.771 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.785 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=purchaseprice) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.785 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.785 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=amount) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.785 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.785 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=markup) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.785 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.785 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=shelflife) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.785 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.785 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=id) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.785 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.785 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=name) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.785 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.785 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.797 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=purchaseprice) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.797 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.797 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=amount) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.797 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.797 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=markup) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.797 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.797 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=shelflife) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.797 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.797 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=id) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.797 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.797 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=name) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.797 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.797 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.816 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=purchaseprice) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.816 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.816 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=amount) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.816 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.816 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=markup) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.816 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.816 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=shelflife) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.816 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.816 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=id) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.816 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.816 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=name) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.816 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.816 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.834 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=purchaseprice) - start
22:11:42.834 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.834 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.835 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.835 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=amount) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.835 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.835 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=markup) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.835 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.835 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=shelflife) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.835 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.835 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=id) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.835 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.835 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=name) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.835 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.835 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.852 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=purchaseprice) - start
22:11:42.852 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.852 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.852 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.853 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=amount) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.853 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.853 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=markup) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.853 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.853 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=11, columnName=shelflife) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.853 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.853 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=id) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.853 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.853 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=name) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.853 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.853 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.864 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=purchaseprice) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.864 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.864 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=amount) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.864 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.864 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=markup) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.864 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.864 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=12, columnName=shelflife) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.864 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.864 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=id) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.864 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.864 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=name) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.864 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.864 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.875 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=purchaseprice) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.875 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.875 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=amount) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.875 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.875 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=markup) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.875 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.875 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=13, columnName=shelflife) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.875 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.875 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=id) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.875 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.875 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=name) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.875 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.875 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.886 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=purchaseprice) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.886 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.886 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=amount) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.886 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.886 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=markup) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.886 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.886 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=14, columnName=shelflife) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.886 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.886 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=id) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.886 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.886 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=name) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.886 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.886 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.897 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=purchaseprice) - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.897 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.897 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=amount) - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.897 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.897 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=markup) - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.897 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.897 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=15, columnName=shelflife) - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.897 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.897 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.898 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=id) - start
22:11:42.898 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.898 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.898 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.898 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.898 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=name) - start
22:11:42.898 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.898 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.898 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.898 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.909 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=purchaseprice) - start
22:11:42.909 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.909 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.909 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.909 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.910 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=amount) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.910 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.910 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=markup) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.910 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.910 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=16, columnName=shelflife) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.910 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.910 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=id) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.910 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.910 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=name) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.910 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.910 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.924 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=purchaseprice) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.924 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.924 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=amount) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.924 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.924 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=markup) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.924 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.924 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=17, columnName=shelflife) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.924 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.924 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=id) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.924 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.924 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=name) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.924 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.924 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.940 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=purchaseprice) - start
22:11:42.940 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.940 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.940 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.940 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.940 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=amount) - start
22:11:42.940 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.940 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.940 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.940 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.941 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=markup) - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.941 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.941 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=18, columnName=shelflife) - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.941 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.941 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=id) - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.941 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.941 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=name) - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.941 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.941 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.954 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=purchaseprice) - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.954 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.954 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=amount) - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.954 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.954 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=markup) - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.954 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=5, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.954 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=19, columnName=shelflife) - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelflife) - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.954 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.954 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - getSqlValue(column=6, resultSet=org.postgresql.jdbc.PgResultSet@2d0399f4) - start
22:11:42.954 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=20, columnName=id) - start
22:11:42.954 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20]
22:11:42.954 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[], _rowList.size()=20]
22:11:42.954 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
22:11:42.954 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(name, UNKNOWN, nullableUnknown), o2=(id, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(purchasePrice, UNKNOWN, nullableUnknown), o2=(name, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, UNKNOWN, nullableUnknown), o2=(purchasePrice, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, UNKNOWN, nullableUnknown), o2=(name, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, UNKNOWN, nullableUnknown), o2=(id, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(markup, UNKNOWN, nullableUnknown), o2=(name, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(markup, UNKNOWN, nullableUnknown), o2=(id, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(shelfLife, UNKNOWN, nullableUnknown), o2=(markup, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(shelfLife, UNKNOWN, nullableUnknown), o2=(purchasePrice, UNKNOWN, nullableUnknown)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]) - start
22:11:42.966 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(name, VARCHAR, noNulls), o2=(id, INTEGER, noNulls)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(purchaseprice, INTEGER, noNulls), o2=(name, VARCHAR, noNulls)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, INTEGER, nullable), o2=(purchaseprice, INTEGER, noNulls)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, INTEGER, nullable), o2=(name, VARCHAR, noNulls)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(amount, INTEGER, nullable), o2=(id, INTEGER, noNulls)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(markup, INTEGER, nullable), o2=(name, VARCHAR, noNulls)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(markup, INTEGER, nullable), o2=(id, INTEGER, noNulls)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(shelflife, DATE, nullable), o2=(markup, INTEGER, nullable)) - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(shelflife, DATE, nullable), o2=(purchaseprice, INTEGER, noNulls)) - start
22:11:42.966 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:42.966 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], columnsToSearch=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)])
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelflife) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[], columnsToSearch=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)])
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.976 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:42.976 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(amount, UNKNOWN, nullableUnknown), actualColumn=(amount, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.976 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(id, UNKNOWN, nullableUnknown), actualColumn=(id, INTEGER, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.976 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(markup, UNKNOWN, nullableUnknown), actualColumn=(markup, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.976 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(name, UNKNOWN, nullableUnknown), actualColumn=(name, VARCHAR, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.976 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(purchasePrice, UNKNOWN, nullableUnknown), actualColumn=(purchaseprice, INTEGER, noNulls), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.976 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=foodstuffs, expectedColumn=(shelfLife, UNKNOWN, nullableUnknown), actualColumn=(shelflife, DATE, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.987 [main] DEBUG org.dbunit.assertion.DbUnitAssert - compareData(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=foodstuffs, columns=[(id, UNKNOWN, nullableUnknown), (name, UNKNOWN, nullableUnknown), (purchasePrice, UNKNOWN, nullableUnknown), (amount, UNKNOWN, nullableUnknown), (markup, UNKNOWN, nullableUnknown), (shelfLife, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=20], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[], _rowList.size()=20], comparisonCols=[org.dbunit.assertion.DbUnitAssert$ComparisonColumn@5dafbe45, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@2254127a, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@51891008, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@2f953efd, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@f68f0dc, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@d2de489], failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=amount) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=100, o2=100) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=100, value2=100) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=id) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.988 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1, o2=1) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=markup) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=markup) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3, o2=3) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3, value2=3) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:42.995 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:42.996 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:42.996 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Хлеб, o2=Хлеб) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchasePrice) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchasePrice) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3300, o2=3300) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3300) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3300, value2=3300) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=shelfLife) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=shelfLife) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=20) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-08-20, o2=2020-08-20) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-20) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-20) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-08-20, value2=2020-08-20) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.004 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=amount) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=20, o2=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=20, value2=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=id) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=markup) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.017 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=markup) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=10, o2=10) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=10, value2=10) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.031 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Мясо, o2=Мясо) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchasePrice) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchasePrice) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=6000, o2=6000) - start
22:11:43.032 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=6000, value2=6000) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=shelfLife) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=shelfLife) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=20) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-02, o2=2020-12-02) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-02, value2=2020-12-02) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=amount) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=30, o2=30) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=30) - start
22:11:43.047 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=30, value2=30) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=id) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3, o2=3) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3, value2=3) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=markup) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=markup) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=15, o2=15) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.062 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сыр, o2=Сыр) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchasePrice) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchasePrice) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=4500, o2=4500) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4500) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=4500, value2=4500) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=shelfLife) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=shelfLife) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=20) - start
22:11:43.074 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-11-02, o2=2020-11-02) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-02) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-02) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-11-02, value2=2020-11-02) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=amount) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=50, o2=50) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=50) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=50, value2=50) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=id) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=4, o2=4) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:43.086 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=4, value2=4) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=markup) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=markup) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Йогурт, o2=Йогурт) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchasePrice) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.099 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchasePrice) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1500, o2=1500) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1500) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1500, value2=1500) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=shelfLife) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=shelfLife) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=20) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-07-15, o2=2020-07-15) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-07-15) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-07-15) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-07-15, value2=2020-07-15) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=amount) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=amount) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.114 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=120, o2=120) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=120) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=120, value2=120) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=id) - start
22:11:43.126 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5, o2=5) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5, value2=5) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=markup) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=markup) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.127 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5, o2=5) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5, value2=5) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Масло, o2=Масло) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchasePrice) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchasePrice) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9600, o2=9600) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9600, value2=9600) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=shelfLife) - start
22:11:43.138 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=shelfLife) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=20) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-19, o2=2020-12-19) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-19, value2=2020-12-19) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=amount) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=amount) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=70, o2=70) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=70, value2=70) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.152 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.164 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=id) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=6, o2=6) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=6, value2=6) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=markup) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=markup) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.165 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Рис, o2=Рис) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchasePrice) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchasePrice) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3850, o2=3850) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3850, value2=3850) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=shelfLife) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=shelfLife) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=20) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-04, o2=2020-12-04) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-04) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-04) - start
22:11:43.177 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-04, value2=2020-12-04) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=amount) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=amount) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=35, o2=35) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=35) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=35, value2=35) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=id) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=id) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=markup) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.190 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=markup) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Гречка, o2=Гречка) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchasePrice) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchasePrice) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.203 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2100, o2=2100) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2100) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2100, value2=2100) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=shelfLife) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=shelfLife) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=20) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-11-10, o2=2020-11-10) - start
22:11:43.215 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-10) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-10) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-11-10, value2=2020-11-10) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=amount) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=amount) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=200, o2=200) - start
22:11:43.216 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:43.230 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:43.230 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:43.230 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=200, value2=200) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=id) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=id) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=8, o2=8) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=8, value2=8) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=markup) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=markup) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.231 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Макароны, o2=Макароны) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchasePrice) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchasePrice) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9000, o2=9000) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9000, value2=9000) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=shelfLife) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.245 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=shelfLife) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=20) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-25, o2=2020-12-25) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-25) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-25) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-25, value2=2020-12-25) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=amount) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=amount) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=10, o2=10) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=10, value2=10) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=id) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=id) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.268 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9, o2=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9, value2=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=markup) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=markup) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9, o2=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9, value2=9) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сосиски, o2=Сосиски) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchasePrice) - start
22:11:43.281 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchasePrice) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1800, o2=1800) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1800) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1800, value2=1800) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=shelfLife) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=shelfLife) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=20) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-10-21, o2=2020-10-21) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-21) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-21) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-10-21, value2=2020-10-21) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=amount) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.297 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=amount) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5, o2=5) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5, value2=5) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=id) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=id) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=10, o2=10) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=10) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=10, value2=10) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=markup) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=markup) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.312 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=15, o2=15) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Рыба, o2=Рыба) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchasePrice) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchasePrice) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2800, o2=2800) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:43.323 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2800) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2800, value2=2800) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=shelfLife) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=shelfLife) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=20) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-08-16, o2=2020-08-16) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-16) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-08-16) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-08-16, value2=2020-08-16) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=amount) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=amount) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=15, o2=15) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=id) - start
22:11:43.335 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=id) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=11, o2=11) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:43.347 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=11) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=11, value2=11) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=markup) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=markup) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.348 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=name) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сок, o2=Сок) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=purchasePrice) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=purchasePrice) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1005, o2=1005) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1005, value2=1005) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=shelfLife) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=10, column=shelfLife) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=10, rowCount=20) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.361 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-29, o2=2020-12-29) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-29) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-29) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-29, value2=2020-12-29) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=amount) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=amount) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=77, o2=77) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=77) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=77, value2=77) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=id) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.375 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=id) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=12, o2=12) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:43.376 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=12, value2=12) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=markup) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=markup) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1, o2=1) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=name) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=name) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Яйца, o2=Яйца) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=purchasePrice) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=purchasePrice) - start
22:11:43.387 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5929, o2=5929) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5929) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5929, value2=5929) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=shelfLife) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.399 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=11, column=shelfLife) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=11, rowCount=20) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-09-01, o2=2020-09-01) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-09-01) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-09-01) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-09-01, value2=2020-09-01) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=amount) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=amount) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.400 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=500, o2=500) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=500) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=500, value2=500) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=id) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=id) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=13, o2=13) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=13) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=13, value2=13) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=markup) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=markup) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.411 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.412 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.412 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2, o2=2) - start
22:11:43.412 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.412 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2, value2=2) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=name) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=name) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Помидоры, o2=Помидоры) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=purchasePrice) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=purchasePrice) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=24500, o2=24500) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=24500, value2=24500) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=shelfLife) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.426 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=12, column=shelfLife) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=12, rowCount=20) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-11, o2=2020-12-11) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-11) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-11) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-11, value2=2020-12-11) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=amount) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=amount) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=700, o2=700) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=700) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=700, value2=700) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=id) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=id) - start
22:11:43.438 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=14, o2=14) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=14) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=14, value2=14) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=markup) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=markup) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1, o2=1) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=name) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=name) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.450 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.461 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Огурцы, o2=Огурцы) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=purchasePrice) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=purchasePrice) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=46900, o2=46900) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=46900, value2=46900) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=shelfLife) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=13, column=shelfLife) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=13, rowCount=20) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-11-22, o2=2020-11-22) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-22) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-11-22) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-11-22, value2=2020-11-22) - start
22:11:43.462 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=amount) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=amount) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=100, o2=100) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=100) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=100, value2=100) - start
22:11:43.473 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=id) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=id) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=15, o2=15) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=15) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=15, value2=15) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=markup) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.474 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=markup) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3, o2=3) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3, value2=3) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=name) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=name) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Перец, o2=Перец) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=purchasePrice) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=purchasePrice) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.485 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3400, o2=3400) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3400) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3400, value2=3400) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=shelfLife) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=14, column=shelfLife) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=14, rowCount=20) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-10-16, o2=2020-10-16) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-16) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-16) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-10-16, value2=2020-10-16) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=amount) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=amount) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=456, o2=456) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:43.497 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=456) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=456, value2=456) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=id) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=id) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=16, o2=16) - start
22:11:43.509 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=16, value2=16) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=markup) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=markup) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=4, o2=4) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=4) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=4, value2=4) - start
22:11:43.510 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=name) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=name) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Яблоки, o2=Яблоки) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=purchasePrice) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=purchasePrice) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=31920, o2=31920) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=31920, value2=31920) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=shelfLife) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=15, column=shelfLife) - start
22:11:43.521 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=15, rowCount=20) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-02, o2=2020-12-02) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-02) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-02, value2=2020-12-02) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=amount) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=amount) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=66, o2=66) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=66) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=66, value2=66) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=id) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=id) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.533 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=17, o2=17) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=17) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=17, value2=17) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=markup) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=markup) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=5, o2=5) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=5) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=5, value2=5) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=name) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=name) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Бананы, o2=Бананы) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=purchasePrice) - start
22:11:43.545 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=purchasePrice) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3894, o2=3894) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3894) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3894, value2=3894) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=shelfLife) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=16, column=shelfLife) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=16, rowCount=20) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-10-30, o2=2020-10-30) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-30) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-30) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-10-30, value2=2020-10-30) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=amount) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.556 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=amount) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=200, o2=200) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=200) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=200, value2=200) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=id) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=id) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=18, o2=18) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=18) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=18, value2=18) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=markup) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=markup) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.568 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.582 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.582 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1, o2=1) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1, value2=1) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=name) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=name) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Лук, o2=Лук) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=purchasePrice) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=purchasePrice) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1400, o2=1400) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:43.583 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1400, value2=1400) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=shelfLife) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=17, column=shelfLife) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=17, rowCount=20) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-19, o2=2020-12-19) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-19) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-19, value2=2020-12-19) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=amount) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=amount) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=16, o2=16) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=16) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=16, value2=16) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=id) - start
22:11:43.598 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=id) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=19, o2=19) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=19, value2=19) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=markup) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=markup) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=20, o2=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=20, value2=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=name) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.614 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=name) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Молоко, o2=Молоко) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=purchasePrice) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=purchasePrice) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=864, o2=864) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=864) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=864, value2=864) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=shelfLife) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=18, column=shelfLife) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=18, rowCount=20) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.631 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-10-15, o2=2020-10-15) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-15) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-10-15) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-10-15, value2=2020-10-15) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=amount) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=amount) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=amount) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=amount) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=78, o2=78) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=78) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=78, value2=78) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=id) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=id) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=id) - start
22:11:43.641 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=id) - start
22:11:43.642 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=20, o2=20) - start
22:11:43.642 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.642 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.642 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=20) - start
22:11:43.642 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=20, value2=20) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=markup) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=markup) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=markup) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=markup) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=8, o2=8) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=8) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=8, value2=8) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=name) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=name) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Пельмени, o2=Пельмени) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=purchasePrice) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.652 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=purchasePrice) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchasePrice) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchasePrice) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=19500, o2=19500) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=19500, value2=19500) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=shelfLife) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=19, column=shelfLife) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=19, rowCount=20) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=shelfLife) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=shelfLife) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=2020-12-30, o2=2020-12-30) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-30) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.DateDataType - typeCast(value=2020-12-30) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=2020-12-30, value2=2020-12-30) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=PRODUCTDETAILS) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
22:11:43.662 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:43.662 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:43.662 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTable(tableName=PRODUCTDETAILS) - start
22:11:43.662 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:43.662 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=PRODUCTDETAILS) - start
22:11:43.662 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:43.672 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:43.672 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:43.672 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:43.672 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:43.672 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=PRODUCTDETAILS (dbIdentifierQuoteString=")
22:11:43.673 [main] DEBUG org.dbunit.util.SQLHelper - class org.dbunit.database.DatabaseTableMetaData. Corrected table name: oldValue=PRODUCTDETAILS newValue=productdetails
22:11:43.673 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'productdetails' exists in schema 'public' ...
22:11:43.674 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@14bdbc74) - start
22:11:43.674 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=PRODUCTDETAILS, object=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]) - start
22:11:43.680 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:43.680 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:43.680 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:43.680 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:43.680 [main] DEBUG org.dbunit.database.DatabaseConfig$Configurator - Statement fetch size set to 100
22:11:43.680 [main] DEBUG org.dbunit.database.DatabaseDataSet - getSelectStatement(schema=public, metaData=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[], escapePattern=null) - start
22:11:43.680 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.680 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getPrimaryKeys() - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=name, escapePattern=null) - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=priceforoneitem, escapePattern=null) - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=purchaseprice, escapePattern=null) - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=profit, escapePattern=null) - start
22:11:43.680 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:43.681 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=productdetails, escapePattern=null) - start
22:11:43.683 [main] DEBUG org.dbunit.database.AbstractResultSetTable - Query: select name, priceforoneitem, purchaseprice, profit from public.productdetails
22:11:43.683 [main] DEBUG org.dbunit.dataset.DefaultTable - addTableRows(table=org.dbunit.database.ForwardOnlyResultSetTable[_metaData=[table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]], _resultSet=[org.postgresql.jdbc.PgResultSet@12591ac8], _statement=[org.postgresql.jdbc.PgStatement@5a7fe64f]], org.dbunit.database.ForwardOnlyResultSetTable[_eot=[false], _lastRow=[-1]]) - start
22:11:43.683 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.684 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=name) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.684 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.684 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.684 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=priceforoneitem) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.684 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.684 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=purchaseprice) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.684 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.684 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=0, columnName=profit) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.684 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.684 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=name) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.684 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.692 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.692 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=priceforoneitem) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.692 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.692 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=purchaseprice) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.692 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.692 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=1, columnName=profit) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.692 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.692 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=name) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.692 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.692 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=priceforoneitem) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.692 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.692 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=purchaseprice) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.692 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.703 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.703 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=2, columnName=profit) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.703 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.703 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=name) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.703 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.703 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=priceforoneitem) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.703 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.703 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=purchaseprice) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.703 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.703 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=3, columnName=profit) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.703 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.703 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=name) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.703 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.712 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.712 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=priceforoneitem) - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.712 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.712 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=purchaseprice) - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.712 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.712 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=4, columnName=profit) - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.712 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.712 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.712 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=name) - start
22:11:43.713 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.713 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.713 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.713 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.713 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=priceforoneitem) - start
22:11:43.713 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.713 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.713 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.713 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.713 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=purchaseprice) - start
22:11:43.713 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.713 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.722 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.722 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=5, columnName=profit) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.722 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.722 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=name) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.722 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.722 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=priceforoneitem) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.722 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.722 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=purchaseprice) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.722 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.722 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=6, columnName=profit) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.722 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.722 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=name) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.722 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.732 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.732 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=priceforoneitem) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.732 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.732 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=purchaseprice) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.732 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.732 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=7, columnName=profit) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.732 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.732 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=name) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.732 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.732 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=priceforoneitem) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.732 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.732 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=purchaseprice) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.732 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.741 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.741 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.741 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=8, columnName=profit) - start
22:11:43.741 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.741 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.741 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.741 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.742 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=name) - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.742 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.datatype.StringDataType - getSqlValue(column=1, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.742 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=priceforoneitem) - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.742 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=2, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.742 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=purchaseprice) - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.742 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=3, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.742 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=9, columnName=profit) - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.742 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.742 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - getSqlValue(column=4, resultSet=org.postgresql.jdbc.PgResultSet@12591ac8) - start
22:11:43.742 [main] DEBUG org.dbunit.database.ForwardOnlyResultSetTable - getValue(row=10, columnName=name) - start
22:11:43.742 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10]
22:11:43.751 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[], _rowList.size()=10]
22:11:43.751 [main] DEBUG org.dbunit.assertion.DbUnitAssert - assertEquals: failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[]) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(priceforoneitem, UNKNOWN, nullableUnknown), o2=(name, UNKNOWN, nullableUnknown)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(purchaseprice, UNKNOWN, nullableUnknown), o2=(priceforoneitem, UNKNOWN, nullableUnknown)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, UNKNOWN, nullableUnknown), o2=(purchaseprice, UNKNOWN, nullableUnknown)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, UNKNOWN, nullableUnknown), o2=(priceforoneitem, UNKNOWN, nullableUnknown)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, UNKNOWN, nullableUnknown), o2=(purchaseprice, UNKNOWN, nullableUnknown)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns - getSortedColumns(metaData=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]) - start
22:11:43.751 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(priceforoneitem, INTEGER, nullable), o2=(name, VARCHAR, nullable)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(purchaseprice, INTEGER, nullable), o2=(priceforoneitem, INTEGER, nullable)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, INTEGER, nullable), o2=(purchaseprice, INTEGER, nullable)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, INTEGER, nullable), o2=(priceforoneitem, INTEGER, nullable)) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnComparator - compare(o1=(profit, INTEGER, nullable), o2=(purchaseprice, INTEGER, nullable)) - start
22:11:43.751 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - getColumns() - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], columnsToSearch=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)])
22:11:43.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.751 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.Columns$ColumnDiff - findMissingColumnsIn(metaDataToCheck=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[], columnsToSearch=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)])
22:11:43.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.774 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=productdetails, expectedColumn=(name, UNKNOWN, nullableUnknown), actualColumn=(name, VARCHAR, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:43.774 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=productdetails, expectedColumn=(priceforoneitem, UNKNOWN, nullableUnknown), actualColumn=(priceforoneitem, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:43.774 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=productdetails, expectedColumn=(profit, UNKNOWN, nullableUnknown), actualColumn=(profit, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:43.774 [main] DEBUG org.dbunit.assertion.DbUnitAssert$ComparisonColumn - getComparisonDataType(tableName=productdetails, expectedColumn=(purchaseprice, UNKNOWN, nullableUnknown), actualColumn=(purchaseprice, INTEGER, nullable), failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:43.774 [main] DEBUG org.dbunit.assertion.DbUnitAssert - compareData(expectedTable=org.dbunit.dataset.DefaultTable[_metaData=tableName=productdetails, columns=[(name, UNKNOWN, nullableUnknown), (priceforoneitem, UNKNOWN, nullableUnknown), (purchaseprice, UNKNOWN, nullableUnknown), (profit, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=10], actualTable=org.dbunit.database.CachedResultSetTable[_metaData=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[], _rowList.size()=10], comparisonCols=[org.dbunit.assertion.DbUnitAssert$ComparisonColumn@1b66c0fb, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@3e0e1046, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@24c1b2d2, org.dbunit.assertion.DbUnitAssert$ComparisonColumn@7dc19a70], failureHandler=org.dbunit.assertion.DefaultFailureHandler[_additionalColumnInfo=null]) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.774 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=name) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Мясо, o2=Мясо) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=priceforoneitem) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=priceforoneitem) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=300, o2=300) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=300) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=300, value2=300) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=profit) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=profit) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:43.780 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=520, o2=520) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=520) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=520, value2=520) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=0, column=purchaseprice) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=10) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=6000, o2=6000) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=6000) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=6000, value2=6000) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=name) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.785 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Масло, o2=Масло) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=priceforoneitem) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=priceforoneitem) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=80, o2=80) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=80) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=80, value2=80) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=profit) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=profit) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=415, o2=415) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=415) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=415, value2=415) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:43.796 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=1, column=purchaseprice) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=10) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9600, o2=9600) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9600) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9600, value2=9600) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=name) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Рис, o2=Рис) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=priceforoneitem) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=priceforoneitem) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.807 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=55, o2=55) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=55) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=55, value2=55) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=profit) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=profit) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=231, o2=231) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=231) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=231, value2=231) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=2, column=purchaseprice) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=10) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.818 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.835 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=3850, o2=3850) - start
22:11:43.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:43.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:43.835 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=3850) - start
22:11:43.835 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=3850, value2=3850) - start
22:11:43.835 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:43.835 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=name) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Макароны, o2=Макароны) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=priceforoneitem) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=priceforoneitem) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=45, o2=45) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=45) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=45, value2=45) - start
22:11:43.836 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=profit) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=profit) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=156, o2=156) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=156) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=156, value2=156) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=3, column=purchaseprice) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=3, rowCount=10) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=9000, o2=9000) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=9000) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=9000, value2=9000) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.847 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=name) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Сок, o2=Сок) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=priceforoneitem) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=priceforoneitem) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=67, o2=67) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=67, value2=67) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=profit) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=profit) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:43.857 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=56, o2=56) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=56) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=56, value2=56) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=4, column=purchaseprice) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=4, rowCount=10) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1005, o2=1005) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1005) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1005, value2=1005) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=name) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.873 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Помидоры, o2=Помидоры) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=priceforoneitem) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=priceforoneitem) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=49, o2=49) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:43.887 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=49) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=49, value2=49) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=profit) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=profit) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=426, o2=426) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=426) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=426, value2=426) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:43.888 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=5, column=purchaseprice) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=5, rowCount=10) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=24500, o2=24500) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=24500) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=24500, value2=24500) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=name) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Огурцы, o2=Огурцы) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=priceforoneitem) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=priceforoneitem) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.898 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=67, o2=67) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=67) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=67, value2=67) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=profit) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=profit) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=408, o2=408) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=408) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=408, value2=408) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=6, column=purchaseprice) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=6, rowCount=10) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.909 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=46900, o2=46900) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=46900) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=46900, value2=46900) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=name) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Яблоки, o2=Яблоки) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=priceforoneitem) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=priceforoneitem) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=70, o2=70) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=70) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=70, value2=70) - start
22:11:43.919 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=profit) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=profit) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1108, o2=1108) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1108) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1108, value2=1108) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=7, column=purchaseprice) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=7, rowCount=10) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=31920, o2=31920) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=31920) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=31920, value2=31920) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.931 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=name) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Лук, o2=Лук) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=priceforoneitem) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=priceforoneitem) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=7, o2=7) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=7) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=7, value2=7) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=profit) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=profit) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:43.946 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=12, o2=12) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=12) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=12, value2=12) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=8, column=purchaseprice) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=8, rowCount=10) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1400, o2=1400) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1400) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1400, value2=1400) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=name) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=name) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=name) - start
22:11:43.956 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=Пельмени, o2=Пельмени) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=priceforoneitem) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=priceforoneitem) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=priceforoneitem) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=250, o2=250) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=250) - start
22:11:43.967 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=250, value2=250) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=profit) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=profit) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=profit) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=profit) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=1352, o2=1352) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1352) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=1352, value2=1352) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:43.968 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.DefaultTable - getValue(row=9, column=purchaseprice) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=9, rowCount=10) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=purchaseprice) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=purchaseprice) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compare(o1=19500, o2=19500) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=19500) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.datatype.AbstractDataType - compareNonNulls(value1=19500, value2=19500) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractDataSet - getTable(tableName=productdetails) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractDataSet - initialize() - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.AbstractDataSet - The table name map has already been initialized.
22:11:43.978 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:43.978 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:43.978 [main] DEBUG org.dbunit.DatabaseTestCase - tearDown() - start
22:11:43.978 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=driverClass, property=org.postgresql.Driver) - start
22:11:43.978 [main] DEBUG org.dbunit.AbstractDatabaseTester - setTearDownOperation(tearDownOperation=org.dbunit.operation.DeleteAllOperation@1356d4d4) - start
22:11:43.978 [main] DEBUG org.dbunit.AbstractDatabaseTester - setDataSet(dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:43.978 [main] DEBUG org.dbunit.DatabaseTestCase - getOperationListener() - start
22:11:43.978 [main] DEBUG org.dbunit.AbstractDatabaseTester - setOperationListener(operationListener=org.dbunit.DatabaseTestCase$1@508dec2b) - start
22:11:43.978 [main] DEBUG org.dbunit.AbstractDatabaseTester - onTearDown() - start
22:11:43.978 [main] DEBUG org.dbunit.AbstractDatabaseTester - executeOperation(operation=org.dbunit.operation.DeleteAllOperation@1356d4d4) - start
22:11:43.978 [main] DEBUG org.dbunit.JdbcDatabaseTester - getConnection() - start
22:11:43.978 [main] DEBUG org.dbunit.assertion.SimpleAssert - assertNotNullNorEmpty(propertyName=connectionUrl, property=jdbc:postgresql://localhost:5432/TestLab2Expected) - start
22:11:44.023 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=public (dbIdentifierQuoteString=")
22:11:44.023 [main] DEBUG org.dbunit.database.DatabaseConnection - Database connection info: 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:44.023 [main] DEBUG org.dbunit.database.DatabaseConnection - validateSchema(validateStrict=false) - start
22:11:44.027 [main] DEBUG org.dbunit.DefaultOperationListener - connectionCreated(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=null]) - start
22:11:44.027 [main] DEBUG org.dbunit.AbstractDatabaseTester - getDataSet() - start
22:11:44.027 [main] DEBUG org.dbunit.operation.DeleteAllOperation - execute(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=null], dataSet=AbstractDataSet[_orderedTableNameMap=null]) - start
22:11:44.027 [main] DEBUG org.dbunit.database.AbstractDatabaseConnection - createDataSet() - start
22:11:44.027 [main] DEBUG org.dbunit.database.statement.PreparedStatementFactory - createBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:44.027 [main] DEBUG org.dbunit.database.statement.AbstractStatementFactory - supportBatchStatement(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.AbstractDataSet - iterator() - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:44.027 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:44.027 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:44.027 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTableMetaData() - start
22:11:44.027 [main] DEBUG org.dbunit.dataset.DefaultTableIterator - getTable() - start
22:11:44.027 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=expiredproducts) - start
22:11:44.027 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:44.027 [main] DEBUG org.dbunit.database.DatabaseDataSet - Initializing the data set from the database...
22:11:44.032 [main] DEBUG org.dbunit.database.DatabaseDataSet - 
	database product name=PostgreSQL
	database version=12.4
	database major version=12
	database minor version=4
	jdbc driver name=PostgreSQL JDBC Driver
	jdbc driver version=42.2.5
	jdbc driver major version=42
	jdbc driver minor version=2

22:11:44.032 [main] DEBUG org.dbunit.database.DatabaseDataSet - metadata resultset=org.postgresql.jdbc.PgResultSet@465232e9
22:11:44.032 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}]) - start
22:11:44.032 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:44.032 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=expiredproducts, escapePattern=null) - start
22:11:44.032 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=expiredproducts, object=null) - start
22:11:44.032 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:44.032 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:44.032 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - start
22:11:44.032 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=EXPIREDPRODUCTS) - end - result=EXPIREDPRODUCTS
22:11:44.032 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}]) - start
22:11:44.032 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:44.032 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=foodstuffs, escapePattern=null) - start
22:11:44.032 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=foodstuffs, object=null) - start
22:11:44.032 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - start
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=FOODSTUFFS) - end - result=FOODSTUFFS
22:11:44.033 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedNameIfEnabled(config=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}]) - start
22:11:44.033 [main] DEBUG org.dbunit.util.QualifiedTableName - Qualified table names feature is disabled. Returning plain table name
22:11:44.033 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=productdetails, escapePattern=null) - start
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - add(tableName=productdetails, object=null) - start
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - start
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=PRODUCTDETAILS) - end - result=PRODUCTDETAILS
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:44.033 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:44.033 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=expiredproducts (dbIdentifierQuoteString=")
22:11:44.033 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'expiredproducts' exists in schema 'public' ...
22:11:44.035 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@798162bc) - start
22:11:44.035 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=expiredproducts, object=table=expiredproducts, cols=[(name, VARCHAR, nullable)], pk=[]) - start
22:11:44.044 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:44.045 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:44.045 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - start
22:11:44.045 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=expiredproducts) - end - result=EXPIREDPRODUCTS
22:11:44.045 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=expiredproducts, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:44.045 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:44.045 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=expiredproducts, escapePattern=null) - start
22:11:44.045 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.expiredproducts) - start
22:11:44.045 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.expiredproducts
22:11:44.045 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=productdetails) - start
22:11:44.045 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:44.045 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:44.045 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:44.045 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:44.045 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:44.045 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=productdetails (dbIdentifierQuoteString=")
22:11:44.045 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'productdetails' exists in schema 'public' ...
22:11:44.046 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@1df8da7a) - start
22:11:44.046 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=productdetails, object=table=productdetails, cols=[(name, VARCHAR, nullable), (priceforoneitem, INTEGER, nullable), (purchaseprice, INTEGER, nullable), (profit, INTEGER, nullable)], pk=[]) - start
22:11:44.052 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:44.052 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:44.052 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - start
22:11:44.052 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=productdetails) - end - result=PRODUCTDETAILS
22:11:44.052 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=productdetails, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:44.052 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:44.052 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=productdetails, escapePattern=null) - start
22:11:44.052 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.productdetails) - start
22:11:44.052 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.productdetails
22:11:44.052 [main] DEBUG org.dbunit.database.DatabaseDataSet - getTableMetaData(tableName=foodstuffs) - start
22:11:44.052 [main] DEBUG org.dbunit.database.DatabaseDataSet - initialize() - start
22:11:44.052 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:44.052 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:44.052 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:44.052 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:44.052 [main] DEBUG org.dbunit.util.SQLHelper - isEscaped returns 'false' for tableName=foodstuffs (dbIdentifierQuoteString=")
22:11:44.052 [main] DEBUG org.dbunit.database.DatabaseTableMetaData - Validating if table 'foodstuffs' exists in schema 'public' ...
22:11:44.054 [main] DEBUG org.dbunit.util.SQLHelper - close(resultSet=org.postgresql.jdbc.PgResultSet@23941fb4) - start
22:11:44.054 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - update(tableName=foodstuffs, object=table=foodstuffs, cols=[(id, INTEGER, noNulls), (name, VARCHAR, noNulls), (purchaseprice, INTEGER, noNulls), (amount, INTEGER, nullable), (markup, INTEGER, nullable), (shelflife, DATE, nullable)], pk=[]) - start
22:11:44.060 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:44.060 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:44.060 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - start
22:11:44.060 [main] DEBUG org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=foodstuffs) - end - result=FOODSTUFFS
22:11:44.060 [main] DEBUG org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=public, name=foodstuffs, connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:44.060 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName() - start
22:11:44.060 [main] DEBUG org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=public, name=foodstuffs, escapePattern=null) - start
22:11:44.060 [main] DEBUG org.dbunit.database.statement.SimpleStatement - addBatch(sql=delete from public.foodstuffs) - start
22:11:44.060 [main] DEBUG org.dbunit.operation.DeleteAllOperation - Added SQL: delete from public.foodstuffs
22:11:44.060 [main] DEBUG org.dbunit.database.statement.SimpleStatement - executeBatch() - start
22:11:44.060 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.expiredproducts
22:11:44.061 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.productdetails
22:11:44.062 [main] DEBUG org.dbunit.database.statement.SimpleStatement - DbUnit SQL: delete from public.foodstuffs
22:11:44.062 [main] DEBUG org.dbunit.database.statement.SimpleStatement - clearBatch() - start
22:11:44.062 [main] DEBUG org.dbunit.database.statement.AbstractBatchStatement - close() - start
22:11:44.062 [main] DEBUG org.dbunit.DefaultOperationListener - operationTearDownFinished(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:44.062 [main] DEBUG org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=public, connection=org.postgresql.jdbc.PgConnection@1e4f4a5c, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@6fa51cd4, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@2767e23c, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@710c2b53, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/features/datatypeWarning=true, http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@5386659f], http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@37313c65}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
22:11:44.062 [main] DEBUG org.dbunit.database.DatabaseConnection - close() - start
]]></system-out>
  </testcase>
  <testcase name="testGetAll" classname="FoodstuffsTest" time="3.382"/>
</testsuite>